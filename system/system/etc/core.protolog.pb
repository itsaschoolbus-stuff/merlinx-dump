
_	√5H±Ç¥ªReport configuration: %s %s *3com/android/server/wm/ActivityClientController.java
c	ÿ5¨±w’“ÈFrontmost changed immersion: %s *3com/android/server/wm/ActivityClientController.java
ñ	0Ë§Gq™•\Can't report activity moved to display - client not running, activityRecord=%s, displayId=%d *)com/android/server/wm/ActivityRecord.java
â	˘<ÚŒy…Ú≈OReporting activity moved to display, activityRecord=%s, displayId=%d, config=%s *)com/android/server/wm/ActivityRecord.java
å	˘5¸t„j/gRCan't report activity configuration update - client not running, activityRecord=%s *)com/android/server/wm/ActivityRecord.java
^	Å1$u€
ô$Sending new config to %s, config: %s *)com/android/server/wm/ActivityRecord.java
á	f7/ﬁ⁄àƒMCan't report activity position update - client not running, activityRecord=%s *)com/android/server/wm/ActivityRecord.java
b	Á0u	-™àd(Sending position change to %s, onTop: %b *)com/android/server/wm/ActivityRecord.java
a	?4,5∞Ê≤'Checking theme of starting window: 0x%x *)com/android/server/wm/ActivityRecord.java
p	˚4∆çÆr‹6Translucent=%s Floating=%s ShowWallpaper=%s Disable=%s *)com/android/server/wm/ActivityRecord.java
[	í:ﬂÀå „d!Creating SplashScreenStartingData *)com/android/server/wm/ActivityRecord.java
W	Q:C#Õﬁ^–Creating SnapshotStartingData *)com/android/server/wm/ActivityRecord.java
Z	#2
& ›àN Add starting %s: startingData=%s *)com/android/server/wm/ActivityRecord.java
n	7}Ò+h4Added starting %s: startingWindow=%s startingView=%s *)com/android/server/wm/ActivityRecord.java
W	î> ¶]jãSurface returned was null: %s *)com/android/server/wm/ActivityRecord.java
Y	«7]¢Í∫˘ÌCleaning splash screen token=%s *)com/android/server/wm/ActivityRecord.java
\	)9_ˇˆKÙ‰"Clearing startingData for token=%s *)com/android/server/wm/ActivityRecord.java
}	J3A\L˜LCSchedule remove starting %s startingWindow=%s animate=%b Callers=%s *)com/android/server/wm/ActivityRecord.java
{	÷0iöèÑ∏AstartingWindow was set but startingSurface==null, couldn't remove *)com/android/server/wm/ActivityRecord.java
y	Ù5œ„Ω√·?Tried to remove starting window but startingWindow was null: %s *)com/android/server/wm/ActivityRecord.java
|	«?pô!_üLBreparent: moving activity=%s to new task fragment in task=%d at %d *)com/android/server/wm/ActivityRecord.java
m	®=‰lW¡Ç3moveFocusableActivityToTop: unfocusable activity=%s 
*)com/android/server/wm/ActivityRecord.java
}	ö8˘á¯‹CmoveFocusableActivityToTop: already on top and focused, activity=%s 
*)com/android/server/wm/ActivityRecord.java
n	.8ñuõOÒ4moveFocusableActivityToTop: set focused, activity=%s 
*)com/android/server/wm/ActivityRecord.java
a	§8!µ%
'moveFocusableActivityToTop: activity=%s 
*)com/android/server/wm/ActivityRecord.java
p	Ö>Ø]+yt36Finishing activity r=%s, result=%d, data=%s, reason=%s *)com/android/server/wm/ActivityRecord.java
S	^3£•\‘ƒÃFinish needs to pause: %s *)com/android/server/wm/ActivityRecord.java
Y	@?æwì/ÆPFinish waiting for pause of: %s *)com/android/server/wm/ActivityRecord.java
m	ô31ﬂ*0Ñ÷3destroyIfPossible: r=%s destroy returned removed=%s 	*)com/android/server/wm/ActivityRecord.java
W	Í=}G}Ω˙+Enqueueing pending finish: %s *)com/android/server/wm/ActivityRecord.java
y	J=‹ ◊¡ô}?activity %s already destroying, skipping request with reason:%s *)com/android/server/wm/ActivityRecord.java
f	∑:µßπN,Moving to DESTROYING: %s (destroy requested) *)com/android/server/wm/ActivityRecord.java
c	;À˙ÁäÊ)Moving to DESTROYED: %s (destroy skipped) *)com/android/server/wm/ActivityRecord.java
Z	=?3dñ;å- Moving to DESTROYED: %s (no app) *)com/android/server/wm/ActivityRecord.java
e	46"Ã∑°z+Removing activity %s, reason= %s callers=%s *)com/android/server/wm/ActivityRecord.java
h	M4ã:ÃÄ⁄s.Moving to DESTROYED: %s (removed from history) *)com/android/server/wm/ActivityRecord.java
W	X4≥dõXÙêactivityDestroyedLocked: r=%s 	*)com/android/server/wm/ActivityRecord.java
í	ä1◊1º&XRemoving activity %s hasSavedState=%b stateNotNeeded=%s finishing=%b state=%s callers=%s *)com/android/server/wm/ActivityRecord.java
P	4H…nÊRemoving app token: %s *)com/android/server/wm/ActivityRecord.java
n	y=^7ˇL4Removing app %s delayed=%b animation=%s animating=%b *)com/android/server/wm/ActivityRecord.java
b	µ1è∑∏ø¶˜(removeAppToken: %s delayed=%b Callers=%s *)com/android/server/wm/ActivityRecord.java
Y	Î5 ~E0removeAppToken make exiting: %s *)com/android/server/wm/ActivityRecord.java
d	ó4¶sR∑õ*Removing focused app token:%s displayId=%d *)com/android/server/wm/ActivityRecord.java
c	=nê™£	t)Moving existing starting %s from %s to %s *)com/android/server/wm/ActivityRecord.java
V	ï0P8ùË–Removing starting %s from %s *)com/android/server/wm/ActivityRecord.java
_	•5UK§	Êw%Moving pending starting from %s to %s *)com/android/server/wm/ActivityRecord.java
â	n3/@Ï’–OsetAppVisibility(%s, visible=%b): %s visible=%b mVisibleRequested=%b Callers=%s *)com/android/server/wm/ActivityRecord.java
O	*=.∫ö5˚No longer Stopped: %s *)com/android/server/wm/ActivityRecord.java
n	o2ÿÔ'w@F4TRANSIT_FLAG_OPEN_BEHIND,  adding %s to mOpeningApps *)com/android/server/wm/ActivityRecord.java
°	<–∑ßc`˘gcommitVisibility: %s: visible=%b visibleRequested=%b, isInTransition=%b, runningAnimation=%b, caller=%s *)com/android/server/wm/ActivityRecord.java
d	Ú;qL¯Ωú†*State movement: %s from:%s to:%s reason:%s *)com/android/server/wm/ActivityRecord.java
Q	4löΩ6î=State unchanged from:%s *)com/android/server/wm/ActivityRecord.java
\	G;AZfÛŸ"notifyAppResumed: wasStopped=%b %s *)com/android/server/wm/ActivityRecord.java
a	•2œ‡|'Resumed activity; dropping state of: %s *)com/android/server/wm/ActivityRecord.java
P	õ4 AÏ~ˇRefreshed activity: %s *)com/android/server/wm/ActivityRecord.java
_	ó2$¶íFo%Activity paused: token=%s, timeout=%b *)com/android/server/wm/ActivityRecord.java
Q	›4òÏdy_Moving to PAUSED: %s %s *)com/android/server/wm/ActivityRecord.java
j	,2ÚVú®˛%0Executing finish of failed to pause activity: %s *)com/android/server/wm/ActivityRecord.java
Z	“5÷Hµ¯a‹ Waiting for pause to complete... *)com/android/server/wm/ActivityRecord.java
Q	ö1À’hno-history finish of %s *)com/android/server/wm/ActivityRecord.java
x	j3ﬁúûÇ,>Not finishing noHistory %s on stop because we're just sleeping *)com/android/server/wm/ActivityRecord.java
a	;6ÿ"⁄·‹'Moving to STOPPING: %s (stop requested) *)com/android/server/wm/ActivityRecord.java
\	:E•r¿ã"Stop failed; moving to STOPPED: %s *)com/android/server/wm/ActivityRecord.java
Q	|5∫–≤œªSaving icicle of %s: %s *)com/android/server/wm/ActivityRecord.java
_	E0a≠H®i%Moving to STOPPED: %s (stop complete) *)com/android/server/wm/ActivityRecord.java
h	V=NgÔB7.Scheduling idle now: forceIdle=%b immediate=%b *)com/android/server/wm/ActivityRecord.java
S	<Y_%Skipping set freeze of %s *)com/android/server/wm/ActivityRecord.java
|	031ç‹Hä3BSet freezing of %s: visible=%b freezing=%b visibleRequested=%b. %s *)com/android/server/wm/ActivityRecord.java
W	i4$Z'±ÕjClear freezing of %s force=%b *)com/android/server/wm/ActivityRecord.java
P	¥8·QuöãNo longer freezing: %s *)com/android/server/wm/ActivityRecord.java
v	ì6ˇƒéIVü<Finish starting %s: first real window is shown, no animation *)com/android/server/wm/ActivityRecord.java
ë	<3´6‹{Á,WSetting mOrientationChangeComplete=true because wtoken %s numInteresting=%d numDrawn=%d *)com/android/server/wm/ActivityRecord.java
Y		8ß®πä&SCreating animation bounds layer *)com/android/server/wm/ActivityRecord.java
\	=;—vÎiÇÊ"No thumbnail header bitmap for: %s *)com/android/server/wm/ActivityRecord.java
ï	‡7wUOIæÖ[Animation done in %s: reportedVisible=%b okToDisplay=%b okToAnimate=%b startingDisplayed=%b *)com/android/server/wm/ActivityRecord.java
a	V9n±j'°Ä'Setting requested orientation %s for %s *)com/android/server/wm/ActivityRecord.java
ù	J1ÙíhX¡‰‚Sandbox max bounds for uid %s to bounds %s. config to never sandbox = %s, config to always sandbox = %s, letterboxing from mismatch with parent bounds = %s, has mCompatDisplayInsets = %s, should create compatDisplayInsets = %s *)com/android/server/wm/ActivityRecord.java
`	ä1˘®g@$&Pausing configuration dispatch for  %s  *)com/android/server/wm/ActivityRecord.java
`	Ò>ª≈∞ÎÖG&Resuming configuration dispatch for %s  *)com/android/server/wm/ActivityRecord.java
a	¯>iŸs<à'Skipping config check (will change): %s *)com/android/server/wm/ActivityRecord.java
f	™7ä÷ÍŒ»,Configuration doesn't matter in finishing %s *)com/android/server/wm/ActivityRecord.java
e	à<}‚ƒ≠úÒ+Skipping config check in destroyed state %s *)com/android/server/wm/ActivityRecord.java
]	Ï:ﬁˇQ2•#Skipping config check invisible: %s *)com/android/server/wm/ActivityRecord.java
\	C8ÈÈI2Œ"Ensuring correct configuration: %s *)com/android/server/wm/ActivityRecord.java
a	’1*◊é◊@'Configuration & display unchanged in %s *)com/android/server/wm/ActivityRecord.java
m	F5ã@πhPà3Skipping config check for initializing activity: %s *)com/android/server/wm/ActivityRecord.java
\	´;«”N }""Configuration no differences in %s *)com/android/server/wm/ActivityRecord.java
e	N3+C4öZÑ+Configuration changes for %s, allChanges=%s *)com/android/server/wm/ActivityRecord.java
e	.0^◊€RNê+Configuration doesn't matter not running %s *)com/android/server/wm/ActivityRecord.java
ã	≥;¥˚EQChecking to restart %s: changed=0x%s, handles=0x%s, mLastReportedConfiguration=%s *)com/android/server/wm/ActivityRecord.java
R	u2}äé\^Config is relaunching %s *)com/android/server/wm/ActivityRecord.java
r	ï:d9Ö∑y|8Config is relaunching invisible activity %s called by %s *)com/android/server/wm/ActivityRecord.java
`	Æ6TPp$ê&Moving to %s Relaunching %s callers=%s *)com/android/server/wm/ActivityRecord.java
S	_2î-[á»Resumed after relaunch %s *)com/android/server/wm/ActivityRecord.java
è	n?‡ÚidRRefreshing activity for freeform camera compatibility treatment, activityRecord=%s *,com/android/server/wm/ActivityRefresher.java
i	7Qá¿.Starting activity when config will change = %b **com/android/server/wm/ActivityStarter.java
q	z?ﬁù∞«‰A6Updating to new configuration after starting activity. **com/android/server/wm/ActivityStarter.java
\	'3W%–ıˇ!Bring to front target: %s from %s **com/android/server/wm/ActivityStarter.java
b	9=¢2÷ô·'Starting new activity %s in new task %s **com/android/server/wm/ActivityStarter.java
X	S9ê8ë]ìKInitial config: %s *5com/android/server/wm/ActivityTaskManagerService.java
ú	¿;Ë†ÔºÀVCannot launch dream activity due to invalid state. dream component: %s packageName: %s %*5com/android/server/wm/ActivityTaskManagerService.java
ë	%=ò&OüKDream packageName does not match active dream. Package %s does not match %s %*5com/android/server/wm/ActivityTaskManagerService.java
p	Í<©,8EOT*Applying new update lock state '%s' for %s *5com/android/server/wm/ActivityTaskManagerService.java
c	Ö0•Jˇà√setFocusedRootTask: taskId=%d 
*5com/android/server/wm/ActivityTaskManagerService.java
r	É9†\0,setFocusedTask: taskId=%d touchedActivity=%s 
*5com/android/server/wm/ActivityTaskManagerService.java
g	0—¯_çyb!moveTaskToFront: moving taskId=%d *5com/android/server/wm/ActivityTaskManagerService.java
d	R?ﬂ·Ç˙ ¬Could not find task for id: %d *5com/android/server/wm/ActivityTaskManagerService.java
Ç	ﬁ=*&Û8<moveTaskToRootTask: moving task=%d to rootTaskId=%d toTop=%b *5com/android/server/wm/ActivityTaskManagerService.java
[	665ª\Ç`startLockTaskMode: %s *5com/android/server/wm/ActivityTaskManagerService.java
X	T<^5Èá|ÙAllowlisting %d:%s *5com/android/server/wm/ActivityTaskManagerService.java
}	£>pZ Ig7moveRootTaskToDisplay: moving taskId=%d to displayId=%d *5com/android/server/wm/ActivityTaskManagerService.java
É	à7.˛Q;yt=%s: caller %d is using old GET_TASKS but privileged; allowing *5com/android/server/wm/ActivityTaskManagerService.java
Å	Í9….í˘π;;%s: caller %d does not hold REAL_GET_TASKS; limiting output *5com/android/server/wm/ActivityTaskManagerService.java
_	‰:›Q~Í;¯Allowing features %d:0x%s *5com/android/server/wm/ActivityTaskManagerService.java
j	%4ì5>c·$Updating global configuration to: %s *5com/android/server/wm/ActivityTaskManagerService.java
r	Û2kNÅ5 ß,Update process config of %s to new config %s *5com/android/server/wm/ActivityTaskManagerService.java
e	1ÎƒP‘hsetVr2dDisplayId called for: %d *5com/android/server/wm/ActivityTaskManagerService.java
d	f8ãZØﬂ|Binding proc %s with config %s *5com/android/server/wm/ActivityTaskManagerService.java
g	6u®8áJl%no-history finish of %s on new resume *1com/android/server/wm/ActivityTaskSupervisor.java
å	[;ŸS÷”8JrealStartActivityLocked: Skipping start of r=%s some activities pausing... *1com/android/server/wm/ActivityTaskSupervisor.java
q	“1Á≈qJÉ/Moving to PAUSED: %s (starting in paused state) *1com/android/server/wm/ActivityTaskSupervisor.java
É	A>∆›}c°âALaunch on display check: displayId=%d callingPid=%d callingUid=%d *1com/android/server/wm/ActivityTaskSupervisor.java
u	>ÂÛ•ÁÛ~3Launch on display check: no caller info, skip check *1com/android/server/wm/ActivityTaskSupervisor.java
v	ê7ÁzZB4Launch on display check: allow launch any on display *1com/android/server/wm/ActivityTaskSupervisor.java
ò	:µj§lVLaunch on display check: disallow launch on virtual display for not-embedded activity. *1com/android/server/wm/ActivityTaskSupervisor.java
ä	Œ7o"û?·HLaunch on display check: disallow activity embedding without permission. *1com/android/server/wm/ActivityTaskSupervisor.java
Ç	303Ú*¸∞@Launch on display check: %s launch for userId=%d on displayId=%d *1com/android/server/wm/ActivityTaskSupervisor.java
Ä	Ô5±G≤˝r·>Launch on display check: allow launch for owner of the display *1com/android/server/wm/ActivityTaskSupervisor.java
â	g9')jçÁƒGLaunch on display check: allow launch for caller present on the display *1com/android/server/wm/ActivityTaskSupervisor.java
v	ã<s»√ƒ4Stopping %s: nowVisible=%b animating=%b finishing=%s *1com/android/server/wm/ActivityTaskSupervisor.java
S	Í9…G3…NReady to stop: %s *1com/android/server/wm/ActivityTaskSupervisor.java
l	7«xü:2*Waiting for top state to be released by %s *1com/android/server/wm/ActivityTaskSupervisor.java
_	8˛ zkx7Top resumed state released %s *1com/android/server/wm/ActivityTaskSupervisor.java
}	>8/Æ¡ÊÃ«DapplyAnimation:  override requested, but it is prohibited by policy. *(com/android/server/wm/AppTransition.java
z	Ü7Êäx¥e‚AapplyAnimation voice: anim=%s transit=%s isEntrance=%b Callers=%s *(com/android/server/wm/AppTransition.java
f	ã4r˛≠íÚT-applyAnimation: anim=%s transit=%s Callers=%s *(com/android/server/wm/AppTransition.java
í	N5~≥A™ãYapplyAnimation: anim=%s nextAppTransition=ANIM_CUSTOM transit=%s isEntrance=%b Callers=%s *(com/android/server/wm/AppTransition.java
ç	?Fô¥øTapplyAnimation: anim=%s nextAppTransition=ANIM_CUSTOM_IN_PLACE transit=%s Callers=%s *(com/android/server/wm/AppTransition.java
â	m3Úº√πBPapplyAnimation: anim=%s nextAppTransition=ANIM_CLIP_REVEAL transit=%s Callers=%s *(com/android/server/wm/AppTransition.java
î	a:\aØ`∞Î[applyAnimation: anim=%s nextAppTransition=ANIM_SCALE_UP transit=%s isEntrance=%s Callers=%s *(com/android/server/wm/AppTransition.java
â	b1‚¢ÑIíÜPapplyAnimation: anim=%s nextAppTransition=%s transit=%s isEntrance=%b Callers=%s *(com/android/server/wm/AppTransition.java
†	q2âH`dlRgapplyAnimation NEXT_TRANSIT_TYPE_OPEN_CROSS_PROFILE_APPS: anim=%s transit=%s isEntrance=true Callers=%s *(com/android/server/wm/AppTransition.java
t	J=π
3Å~;applyAnimation: anim=%s transit=%s isEntrance=%b Callers=%s *(com/android/server/wm/AppTransition.java
†	79:¢åÔgapplyAnimation: anim=%s animAttr=0x%x transit=%s isEntrance=%b  canCustomizeAppTransition=%b Callers=%s *(com/android/server/wm/AppTransition.java
l	Â<_ƒ¨IV3Override pending remote transitionSet=%b adapter=%s *(com/android/server/wm/AppTransition.java
Ω	x6~g¯A†HÉ*** APP TRANSITION TIMEOUT. displayId=%d isTransitionSet()=%b mOpeningApps.size()=%d mClosingApps.size()=%d mChangingApps.size()=%d *(com/android/server/wm/AppTransition.java
R	#;ÆW2ZhZ**** GOOD TO GO *2com/android/server/wm/AppTransitionController.java
©	o9m2Ω“0fhandleAppTransitionReady: displayId=%d appTransition={%s} openingApps=[%s] closingApps=[%s] transit=%s *2com/android/server/wm/AppTransitionController.java
W	È>éÅ°C›Wallpaper animation! *2com/android/server/wm/AppTransitionController.java
ì	;8
.8ﬁPWe don't support remote animation for Task with multiple TaskFragmentOrganizers. *2com/android/server/wm/AppTransitionController.java
}	≠1AÏ∏” :Override with TaskFragment remote animation for transit=%s *2com/android/server/wm/AppTransitionController.java
£	>:Óbb§`Task=%d contains embedded TaskFragment. Disabled all input during TaskFragment remote animation. *2com/android/server/wm/AppTransitionController.java
n	?6Õd&V3‘+Changing app %s visible=%b performLayout=%b *2com/android/server/wm/AppTransitionController.java
c	A:Ñc÷ç getAnimationTarget in=%s, out=%s *2com/android/server/wm/AppTransitionController.java
U	s55>›5R=Now opening app %s *2com/android/server/wm/AppTransitionController.java
U	≥>ÖV“ﬂãNow closing app %s *2com/android/server/wm/AppTransitionController.java
V	È<ŒcÍøNow changing app %s *2com/android/server/wm/AppTransitionController.java
u	40ÅbPˆ(2Checking %d opening apps (frozen=%b timeout=%b)... *2com/android/server/wm/AppTransitionController.java
Ç	Ñ<∏µ…Ã‚D?Delaying app transition for screen rotation animation to finish *2com/android/server/wm/AppTransitionController.java
Ø	92£‹QiFlCheck opening app=%s: allDrawn=%b startingDisplayed=%b startingMoved=%b isRelaunching()=%b startingWindow=%s *2com/android/server/wm/AppTransitionController.java
d	À3Œy.≥/!isFetchingAppTransitionSpecs=true *2com/android/server/wm/AppTransitionController.java
_	√6?~<ÃFunknownApps is not empty: %s *2com/android/server/wm/AppTransitionController.java
j	Í8nè≠1'Organized TaskFragment is not ready= %s *2com/android/server/wm/AppTransitionController.java
g	]<+¬C≠·,SyncGroup %d: onSurfacePlacement checking %s **com/android/server/wm/BLASTSyncEngine.java
e	<€Ô≤QMu*SyncGroup %d:  Unfinished dependencies: %s **com/android/server/wm/BLASTSyncEngine.java
b	`4%ÙUè'SyncGroup %d:  Unfinished container: %s **com/android/server/wm/BLASTSyncEngine.java
R	€4Â,ƒ¡H\SyncGroup %d: Finished! **com/android/server/wm/BLASTSyncEngine.java
X	;◊2*Ó9PendingStartTransaction found **com/android/server/wm/BLASTSyncEngine.java
U	t>˚Áæ◊îWSyncGroup %d: Set ready %b **com/android/server/wm/BLASTSyncEngine.java
\	q8√¸µc˘!SyncGroup %d: Adding to group: %s **com/android/server/wm/BLASTSyncEngine.java
c	¡<l¬Ú!©÷(SyncGroup %d: Started %sfor listener: %s **com/android/server/wm/BLASTSyncEngine.java
~	37ˇˇú„Kˆ:No focused window, defaulting to top current task's window $*3com/android/server/wm/BackNavigationController.java
u	m=„=ú´˚'1Focused window didn't have a valid surface drawn. $*3com/android/server/wm/BackNavigationController.java
\	v<h gú/™Focus window is closing. $*3com/android/server/wm/BackNavigationController.java
ü	A9Öà8[startBackNavigation currentTask=%s, topRunningActivity=%s, callbackInfo=%s, currentFocus=%s $*3com/android/server/wm/BackNavigationController.java
ê	ù:.“≈µ\uLPrevious Destination is Activity:%s Task:%s removedContainer:%s, backType=%s $*3com/android/server/wm/BackNavigationController.java
~	ô?óÄ´ªD:Pending back animation due to another animation is running $*3com/android/server/wm/BackNavigationController.java
ä	è: t2‰æ¶FonTransactionReady, opening: %s, closing: %s, animating: %s, match: %b $*3com/android/server/wm/BackNavigationController.java
}	∆4ƒÍÇ8≈«9Handling the deferred animation after transition finished $*3com/android/server/wm/BackNavigationController.java
}	∞5C˚@∆”9Setting Activity.mLauncherTaskBehind to true. Activity=%s $*3com/android/server/wm/BackNavigationController.java
~	¸3XJI=Z¬:Setting Activity.mLauncherTaskBehind to false. Activity=%s $*3com/android/server/wm/BackNavigationController.java
t	0ª¬ÏÔ∑0onBackNavigationDone backType=%s, triggerBack=%b $*3com/android/server/wm/BackNavigationController.java
Q	q5!ªgﬂ÷  BLACK %s: CREATE layer=%d *%com/android/server/wm/BlackFrame.java
I	ù3áeK“–±  BLACK %s: DESTROY *%com/android/server/wm/BlackFrame.java
≤	)>ª¯ÎP‡lDisplay id=%d is notified that Camera %s is closed but activity is still refreshing. Rescheduling an update. *5com/android/server/wm/CameraCompatFreeformPolicy.java
s	E5@~W•›-Unable to update CompatibilityInfo for app %s *5com/android/server/wm/CameraCompatFreeformPolicy.java
}	≈0_fâÓ°p?Display id=%d is notified that Camera %s is open for package %s *-com/android/server/wm/CameraStateMonitor.java
q	Ì?ËßKnûÀ3Display id=%d is notified that Camera %s is closed. *-com/android/server/wm/CameraStateMonitor.java
^	1Æ¿ ∫ı˛ Sending to proc %s new compat %s *-com/android/server/wm/CompatModePackages.java
õ	50Ã∫Q§`Content Recording: Unexpectedly null window container; unable to update recording for display %d "**com/android/server/wm/ContentRecorder.java
ö	»5Å£1Hd_Content Recording: Display %d was already recording, but pause capture since the task is in PIP "**com/android/server/wm/ContentRecorder.java
ï	n8J∂Ø˚ZContent Recording: Display %d was already recording, so apply transformations if necessary "**com/android/server/wm/ContentRecorder.java
ø	%4} Û† ÉContent Recording: Going ahead with updating recording for display %d to new bounds %s and/or orientation %d and/or surface size %s "**com/android/server/wm/ContentRecorder.java
€	|1¥+Í8uüContent Recording: Unable to update recording for display %d to new bounds %s and/or orientation %d and/or surface size %s, since the surface is not available. "**com/android/server/wm/ContentRecorder.java
z	^6‡∞y√?Content Recording: Display %d changed surface so stop recording "**com/android/server/wm/ContentRecorder.java
|	l3eÑ3CƒAContent Recording: Display %d has content (%b) so pause recording "**com/android/server/wm/ContentRecorder.java
x	Ω5#?æóR=Content Recording: Stop MediaProjection on virtual display %d "**com/android/server/wm/ContentRecorder.java
n	ﬁ6u¨Tx‡–3Content Recording: waiting to record, so do nothing "**com/android/server/wm/ContentRecorder.java
ó	996®"Â^\Content Recording: Display %d should start recording, but don't yet since the task is in PIP "**com/android/server/wm/ContentRecorder.java
ö	/>øêÂÓ⁄a_Content Recording: Unable to start recording for display %d since the surface is not available. "**com/android/server/wm/ContentRecorder.java
í	™?P–8NWContent Recording: Display %d has no content and is on, so start recording for state %d "**com/android/server/wm/ContentRecorder.java
Ä	:⁄á¨}EUnable to retrieve window container to start recording for display %d "**com/android/server/wm/ContentRecorder.java
à	ç7$	«¸«·MContent Recording: Unable to start recording due to null token for display %d "**com/android/server/wm/ContentRecorder.java
á	ï1‘\ÛLContent Recording: Unable to retrieve task to start recording for display %d "**com/android/server/wm/ContentRecorder.java
å	c9OU«ˇàŒQContent Recording: Unable to start recording due to invalid region for display %d "**com/android/server/wm/ContentRecorder.java
Ò	¥;f7cFµContent Recording: Apply transformations of shift %d x %d, scale %f x %f, crop (aka recorded content size) %d x %d for display %d; display has size %d x %d; surface has size %d x %d "**com/android/server/wm/ContentRecorder.java
ß	;5,ì/Y lContent Recording: Provided surface for recording on display %d is not present, so do not update the surface "**com/android/server/wm/ContentRecorder.java
á	ò:R/Ó ÌnLContent Recording: Recorded task is removed, so stop recording on display %d "**com/android/server/wm/ContentRecorder.java
w	4ˇb(a,<Content Recording: stopping active projection for display %d "**com/android/server/wm/ContentRecorder.java
´	Ï8¸jwÛ<pContent Recording: Unable to tell MediaProjectionManagerService to stop the active projection for display %d: %s "**com/android/server/wm/ContentRecorder.java
Ø	49‚Âry5tContent Recording: Unable to tell MediaProjectionManagerService about visibility change on the active projection: %s "**com/android/server/wm/ContentRecorder.java
z	¨2"2Q€Î?Content Recording: Unable to tell log windowing mode change: %s "**com/android/server/wm/ContentRecorder.java
r	V8_¨XÓ‰97Content Recording: Unable to tell log bounds change: %s "**com/android/server/wm/ContentRecorder.java
≤	¬5√A¬Äﬂ¸lContent Recording: Accept session updating same display %d with granted consent, with an existing session %s "*5com/android/server/wm/ContentRecordingController.java
ô	ƒ:QCÏ˛¨SContent Recording: Ignoring session on same display %d, with an existing session %s "*5com/android/server/wm/ContentRecordingController.java
û	Û>zæ8K®:XContent Recording: Handle incoming session on display %d, with a pre-existing session %s "*5com/android/server/wm/ContentRecordingController.java
‡	±4£ÿÄﬁYÏôContent Recording: Incoming session on display %d can't be set since it is already null; the corresponding VirtualDisplay must have already been removed. "*5com/android/server/wm/ContentRecordingController.java
Ç	ï5c¿3∞<Content Recording: Pause the recording session on display %s "*5com/android/server/wm/ContentRecordingController.java
z	Á=tk{+ê8DeferredDisplayUpdater: applying DisplayInfo immediately *1com/android/server/wm/DeferredDisplayUpdater.java
Ñ	C;eà£ﬁ˚BDeferredDisplayUpdater: partially applying DisplayInfo immediately *1com/android/server/wm/DeferredDisplayUpdater.java
v	ô8¯&ut4DeferredDisplayUpdater: deferring DisplayInfo update *1com/android/server/wm/DeferredDisplayUpdater.java
}	 2)kﬁJÛ;DeferredDisplayUpdater: applied DisplayInfo after deferring *1com/android/server/wm/DeferredDisplayUpdater.java
[	1>q«ìEn)Removing dim surface %s on transaction %s &*!com/android/server/wm/Dimmer.java
}	ö9"∆∆•n4<%s skipping animation and directly setting alpha=%f, blur=%d &*0com/android/server/wm/DimmerAnimationHelper.java
Y	Ñ;πZ«ßStarting animation on %s &*0com/android/server/wm/DimmerAnimationHelper.java
\	≤8üMÄ%ÑÔDim animation requested: %s &*0com/android/server/wm/DimmerAnimationHelper.java
e	Ô:_x∞Û.%s forcing orientation to %d for display id=%d *&com/android/server/wm/DisplayArea.java
n	˝0≈FsP7$Register display organizer=%s uid=%d *9com/android/server/wm/DisplayAreaOrganizerController.java
Ö	A8æyr’;Don't organize or trigger events for untrusted displayId=%d *9com/android/server/wm/DisplayAreaOrganizerController.java
p	Ω4#—ËÚ&Unregister display organizer=%s uid=%d *9com/android/server/wm/DisplayAreaOrganizerController.java
g	#5õF/nGCreate TaskDisplayArea uid=%d *9com/android/server/wm/DisplayAreaOrganizerController.java
g	?X÷§W¯ËDelete TaskDisplayArea uid=%d *9com/android/server/wm/DisplayAreaOrganizerController.java
f	G>ô◊jNX¡DisplayArea appeared name=%s *9com/android/server/wm/DisplayAreaOrganizerController.java
f	o:¸‘Ù—DisplayArea vanished name=%s *9com/android/server/wm/DisplayAreaOrganizerController.java
j	3XU`MÚ DisplayArea info changed name=%s *9com/android/server/wm/DisplayAreaOrganizerController.java
o	È0Ìû?D+The TaskDisplayArea with %s does not exist. *3com/android/server/wm/DisplayAreaPolicyBuilder.java
s	Ï=*∂{‡9Looking for focus: %s, flags=%d, canReceive=%b, reason=%s 
*)com/android/server/wm/DisplayContent.java
q	Z2ºq;B‰7findFocusedWindow: focusedApp=null using new focus @ %s *)com/android/server/wm/DisplayContent.java
Ç	È5®÷n˝ˇÍHfindFocusedWindow: focusedApp windows not focusable using new focus @ %s *)com/android/server/wm/DisplayContent.java
c	8ßﬁ}√)findFocusedWindow: Reached focused app=%s *)com/android/server/wm/DisplayContent.java
a	?8Ÿ"
¢é*'findFocusedWindow: Found new focus @ %s *)com/android/server/wm/DisplayContent.java
j	2úÙ·∑á0First draw done in potential wallpaper target %s #*)com/android/server/wm/DisplayContent.java
¶	⁄2ÿY–<5WlhandleNotObscuredLocked: %s was holding screen wakelock but no longer has FLAG_KEEP_SCREEN_ON!!! called by%s *)com/android/server/wm/DisplayContent.java
]	≤4z2ÆÇ0#Acquiring screen wakelock due to %s *)com/android/server/wm/DisplayContent.java
c	=2π¡Ü‚Â)Releasing screen wakelock, obscured by %s *)com/android/server/wm/DisplayContent.java
X	Ç6 Øà$Set mOrientationChanging of %s *)com/android/server/wm/DisplayContent.java
r	'7a®6pÄ8Display id=%d is frozen while keyguard locked, return %d *)com/android/server/wm/DisplayContent.java
ù	0l%lª˜˛cDisplay id=%d is ignoring orientation request for %d, return %d following a per-app override for %s *)com/android/server/wm/DisplayContent.java
y	®:dÁÂn‡–?Display id=%d is ignoring orientation request for %d, return %d *)com/android/server/wm/DisplayContent.java
Ñ	0>≠·}Rπ/JNo app or window is requesting an orientation, return %d for display id=%d *)com/android/server/wm/DisplayContent.java
m	 5C•∞dg3findFocusedWindow: No focusable windows, display=%d *)com/android/server/wm/DisplayContent.java
l	?3¡Wî·2Current transition prevents automatic focus change 
*)com/android/server/wm/DisplayContent.java
n	¯8†@„à	+4Changing focus from %s to %s displayId=%d Callers=%s *)com/android/server/wm/DisplayContent.java
b	l3›Üñ·Òi(setFocusedApp %s displayId=%d Callers=%s *)com/android/server/wm/DisplayContent.java
R	∞;˛€‹≠∆SURFACE LEAK DESTROY: %s *)com/android/server/wm/DisplayContent.java
Q	∑0·D	EÙ=setInputMethodTarget %s *)com/android/server/wm/DisplayContent.java
n	q<#‰6C4create IME snapshot for %s, buff width=%s, height=%s *)com/android/server/wm/DisplayContent.java
]	¿<æÑRæl!#Set IME snapshot position: (%d, %d) *)com/android/server/wm/DisplayContent.java
X	P1ê©ê ’remove IME snapshot, caller=%s *)com/android/server/wm/DisplayContent.java
f	œ4#®Ô≥‹•,show IME snapshot, ime target=%s, callers=%s *)com/android/server/wm/DisplayContent.java
V	:gï¡^ë√setInputMethodInputTarget %s *)com/android/server/wm/DisplayContent.java
{	–9Õª)±¬!ADisplayContent: boot is waiting for window of type %d to be drawn *)com/android/server/wm/DisplayContent.java
ï	≠=É\~‡N[******** booted=%b msg=%b haveBoot=%b haveApp=%b haveWall=%b wallEnabled=%b haveKeyguard=%b *)com/android/server/wm/DisplayContent.java
~	ä0ÊGàG˛DonWindowAnimationFinished, wc=%s, type=%s, imeSnapshot=%s, target=%s *)com/android/server/wm/DisplayContent.java
í	.6S	èügÍXImeContainer just became organized. Reparenting under parent. imeParentSurfaceControl=%s *)com/android/server/wm/DisplayContent.java
÷	\5ënHäõImeContainer just became organized but it doesn't have a parent or the parent doesn't have a surface control. mSurfaceControl=%s imeParentSurfaceControl=%s *)com/android/server/wm/DisplayContent.java
n	û?¿¿ja4Execute app transition: %s, displayId: %d Callers=%s *)com/android/server/wm/DisplayContent.java
n	9u1πëP”4Wallpaper layer changed: assigning layers + relayout #*)com/android/server/wm/DisplayContent.java
â	œ;}?µˆÆéOContent Recording: Display %d state was (%d), is now (%d), so update recording? "*)com/android/server/wm/DisplayContent.java
l	<:<'ú√92Content Recording: Attempting to mirror self on %d "*)com/android/server/wm/DisplayContent.java
ü	=¿±™M/LeContent Recording: Found no matching mirror display for id=%d for DEFAULT_DISPLAY. Nothing to mirror. "*)com/android/server/wm/DisplayContent.java
≤	7¢ÿéürˇxContent Recording: Attempting to mirror %d from %d but no DisplayContent associated. Changing to mirror default display. "*)com/android/server/wm/DisplayContent.java
∞		5¿}ü√’ZvContent Recording: Successfully created a ContentRecordingSession for displayId=%d to mirror content from displayId=%d "*)com/android/server/wm/DisplayContent.java
∏	Œ6≤Kk~ê©finishScreenTurningOn: mAwake=%b, mScreenOnEarly=%b, mScreenOnFully=%b, mKeyguardDrawComplete=%b, mWindowManagerDrawComplete=%b *(com/android/server/wm/DisplayPolicy.java
V	÷8vÅ‚X¨Finished screen turning on... *(com/android/server/wm/DisplayPolicy.java
Z	ú0êt∑‡Îò!selectAnimation in %s: transit=%d *(com/android/server/wm/DisplayPolicy.java
K	Û9|)≤˝®**** STARTING EXIT *(com/android/server/wm/DisplayPolicy.java
b	ã9y,ä—Ù°'Deferring rotation, rotation is paused. **com/android/server/wm/DisplayRotation.java
e	41âÁ	?g*Deferring rotation, animation in progress. **com/android/server/wm/DisplayRotation.java
p	p3G∞˘÷R5Deferring rotation, still finishing previous rotation **com/android/server/wm/DisplayRotation.java
f	=Ωt¡ñ)·+Deferring rotation, display is not enabled. **com/android/server/wm/DisplayRotation.java
x	l0GXh3	=Reverting orientation. Rotating to %s from %s rather than %s. **com/android/server/wm/DisplayRotation.java
ü	Ÿ90zH‘GùdComputed rotation=%s (%d) for display id=%d based on lastOrientation=%s (%d) and oldRotation=%s (%d) **com/android/server/wm/DisplayRotation.java
{	œ>⁄Ô—ØøÖ@Display id=%d selected orientation %s (%d), got rotation %s (%d) **com/android/server/wm/DisplayRotation.java
{	˚3‹}C∏]@Display id=%d rotation changed to %d from %d, lastOrientation=%d **com/android/server/wm/DisplayRotation.java
r	¿;ÅπŸÔ7Performing post-rotate rotation after seamless rotation **com/android/server/wm/DisplayRotation.java
à	03ó«î∆ÖïMselectRotationAnimation topFullscreen=%s rotationAnimation=%d forceJumpcut=%b **com/android/server/wm/DisplayRotation.java
ƒ	:>v
cÆSﬁàscreenOnEarly=%b, awake=%b, currentAppOrientation=%d, orientationSensorEnabled=%b, keyguardDrawComplete=%b, windowManagerDrawComplete=%b **com/android/server/wm/DisplayRotation.java
Ä	¨3óA5
€eErotationForOrientation(orient=%s (%d), last=%s (%d)); user=%s (%d) %s **com/android/server/wm/DisplayRotation.java
	≤1¯ùâØÊIDInvalid surface rotation angle in config_deviceTabletopRotations: %d **com/android/server/wm/DisplayRotation.java
ö	/:Ø0l@_config_deviceTabletopRotations is not defined. Half-fold letterboxing will work inconsistently. **com/android/server/wm/DisplayRotation.java
ÿ	8áR⁄ŸzúfoldStateChanged: displayId %d, halfFoldStateChanged %s, saved rotation: %d, mUserRotation: %d, mLastSensorRotation: %d, mLastOrientation: %d, mRotation: %d **com/android/server/wm/DisplayRotation.java
a	#6{©Õûá&onProposedRotationChanged, rotation=%d **com/android/server/wm/DisplayRotation.java
M	Ä0≥@%ŒEnabling listeners **com/android/server/wm/DisplayRotation.java
N	ÿ<%Sø	k@Disabling listeners **com/android/server/wm/DisplayRotation.java
á	3ûGögøDisplay id=%d is ignoring all orientation requests, camera is active and the top activity is eligible for force rotation, return %s,portrait activity: %b, is natural orientation portrait: %b. *6com/android/server/wm/DisplayRotationCompatPolicy.java
	¯5∂7Of(∏8Reverting orientation after camera compat force rotation *6com/android/server/wm/DisplayRotationCompatPolicy.java
è	–?8‚1ü·HSaving original orientation before camera compat, last orientation is %d *6com/android/server/wm/DisplayRotationCompatPolicy.java
°	›?#»Y≥ÍZDisplayRotationCompatPolicy: Multi-window toast not shown as package '%s' cannot be found. *6com/android/server/wm/DisplayRotationCompatPolicy.java
∞	u0 –RÈÎ∏iDisplay id=%d is notified that camera is closed but activity is still refreshing. Rescheduling an update. *6com/android/server/wm/DisplayRotationCompatPolicy.java
ä	M3‰2ÒlèCDisplay id=%d is notified that Camera is closed, updating rotation. *6com/android/server/wm/DisplayRotationCompatPolicy.java
h	4?l›>èüNOSENSOR override detected *=com/android/server/wm/DisplayRotationReversionController.java
t	*?€∆‚g„&NOSENSOR override is absent: reverting *=com/android/server/wm/DisplayRotationReversionController.java
Ö	Ó6F0Ì^ƒ7Other orientation overrides are in place: not reverting *=com/android/server/wm/DisplayRotationReversionController.java
Q	ç>Ç§…_nPausing rotation during drag *$com/android/server/wm/DragState.java
Q	É7
a<rResuming rotation after drag *$com/android/server/wm/DragState.java
I	8?êb¸, DRAG %s: pos=(%d,%d) *$com/android/server/wm/DragState.java
á	‰<~≤◊kÁCAttempt to transfer touch gesture with non-existent embedded window (*3com/android/server/wm/EmbeddedWindowController.java
ì	Ò;†‘8ÊÁOAttempt to transfer touch gesture using embedded window with no associated host (*3com/android/server/wm/EmbeddedWindowController.java
ö	¢1Qb	VAttempt to transfer touch gesture with host window not associated with embedded window (*3com/android/server/wm/EmbeddedWindowController.java
ï	â3˛5zâ≠QAttempt to transfer touch gesture using embedded window that has no input channel (*3com/android/server/wm/EmbeddedWindowController.java
è	F9~t∫VéáKAttempt to transfer touch gesture using a host window with no input channel (*3com/android/server/wm/EmbeddedWindowController.java
h	3πÄh•k~%onPostLayout cancel statsToken, ws=%s *2com/android/server/wm/ImeInsetsSourceProvider.java
d	≤6ïÅîµª!IME getControl without statsToken *2com/android/server/wm/ImeInsetsSourceProvider.java
ï	k8%åÔÒiœRTried to update client visibility for non-IME input target %s (current target: %s) *2com/android/server/wm/ImeInsetsSourceProvider.java
k	4ãÚ3Nı(IME target changed within ActivityRecord *2com/android/server/wm/ImeInsetsSourceProvider.java
[	¬?¸Ô“\ê$Schedule IME show for %s *2com/android/server/wm/ImeInsetsSourceProvider.java
T	Á:∑d »◊{Run showImeRunner *2com/android/server/wm/ImeInsetsSourceProvider.java
]	ö8Xÿíœcall showInsets(ime) on %s *2com/android/server/wm/ImeInsetsSourceProvider.java
y	Z5vø∂Ûn6showInsets(ime) was requested by different window: %s  *2com/android/server/wm/ImeInsetsSourceProvider.java
Y	%9ˇÄˆåa•abortShowImePostLayout *2com/android/server/wm/ImeInsetsSourceProvider.java
a	U>Z∏ÊÉ˝£dcTarget: %s mImeRequester: %s *2com/android/server/wm/ImeInsetsSourceProvider.java
`	!9OW.Mâ(Input focus has changed to %s display=%d *'com/android/server/wm/InputMonitor.java
∞	4æ?Å‰7xApp %s is focused, but the window is not ready. Start a transaction to remove focus from the window of non-focused apps. *'com/android/server/wm/InputMonitor.java
à	1º⁄YAÉâPFocus not requested for window=%s because it has no surface or is not focusable. *'com/android/server/wm/InputMonitor.java
U	Q4îäÏßFocus requested for window=%s *'com/android/server/wm/InputMonitor.java
b	›4b§Zh""InsetsSource setWin %s for type %s !*/com/android/server/wm/InsetsSourceProvider.java
e	Ç:z]ƒ£V%InsetsSource Control %s for target %s !*/com/android/server/wm/InsetsSourceProvider.java
â	"8Æ/ñ∂∫çIInsetsSource updateVisibility for %s, serverVisible: %s clientVisible: %s !*/com/android/server/wm/InsetsSourceProvider.java
{	v9T«R‹¢à;ControlAdapter startAnimation mSource: %s controlTarget: %s !*/com/android/server/wm/InsetsSourceProvider.java
Ç	ˇ2•¶Û”†BControlAdapter onAnimationCancelled mSource: %s mControlTarget: %s !*/com/android/server/wm/InsetsSourceProvider.java
]	Ô3xΩ∆=£onImeControlTargetChanged %s *0com/android/server/wm/InsetsStateController.java
R	;2guf{clearLockedTasks: %s *-com/android/server/wm/LockTaskController.java
Z	4öJå~|removeLockedTask: removed %s *-com/android/server/wm/LockTaskController.java
Ü	~?€¯xÛ:yHremoveLockedTask: task=%s last task, reverting locktask mode. Callers=%s *-com/android/server/wm/LockTaskController.java
g	Ï5u∫„;
)startLockTaskMode: Can't lock due to auth *-com/android/server/wm/LockTaskController.java
M	X2}Ñí±¯Already locked. *-com/android/server/wm/LockTaskController.java
W	¨;<{`2ùMode default, asking user *-com/android/server/wm/LockTaskController.java
@	2±Ω˙⁄bÍ%s *-com/android/server/wm/LockTaskController.java
e	8Z›,O!ƒ'setLockTaskMode: Can't lock due to auth *-com/android/server/wm/LockTaskController.java
g	§;%π"Ø.)setLockTaskMode: Locking to %s Callers=%s *-com/android/server/wm/LockTaskController.java
w	è?ı3kΩ9onLockTaskPackagesUpdated: removing %s mLockTaskAuth()=%s *-com/android/server/wm/LockTaskController.java
v	µ8√l]ﬁj8onLockTaskPackagesUpdated: starting new locktask task=%s *-com/android/server/wm/LockTaskController.java
V	p3ˆWÂî4startAnimation *7com/android/server/wm/NonAppWindowAnimationAdapter.java
\	K;ﬁXfÃ	onAnimationCancelled *7com/android/server/wm/NonAppWindowAnimationAdapter.java
W	_<ªˆ&î“Ö Setting frozen recents task list *&com/android/server/wm/RecentTasks.java
h	ø4ıaì81Resetting frozen recents task list reason=timeout *&com/android/server/wm/RecentTasks.java
b	è>-UÎﬂË-+remove RecentTask %s when finishing user %d *&com/android/server/wm/RecentTasks.java
S	9;dØÁ◊ÀPreload recents with %s *+com/android/server/wm/RecentsAnimation.java
M	ì2¯K…J—Updated config=%s *+com/android/server/wm/RecentsAnimation.java
N	D4Å|;êúReal start recents *+com/android/server/wm/RecentsAnimation.java
k	Î=+˘Òèq¥&createAnimationAdapter(): container=%s *4com/android/server/wm/RemoteAnimationController.java
O	`8˚9dÛ`
goodToGo() *4com/android/server/wm/RemoteAnimationController.java
k	h65T>óÂ&goodToGo(): Animation canceled already *4com/android/server/wm/RemoteAnimationController.java
z	+=3`BM]]5goodToGo(): No apps to animate, mPendingAnimations=%d *4com/android/server/wm/RemoteAnimationController.java
ë	g5u{1ñÛ‹LgoodToGo(): onAnimationStart, transit=%s, apps=%d, wallpapers=%d, nonApps=%d *4com/android/server/wm/RemoteAnimationController.java
n	…;˜_|)startAnimation(): Notify animation start: *4com/android/server/wm/RemoteAnimationController.java
a	5ç~™hcancelAnimation(): reason=%s *4com/android/server/wm/RemoteAnimationController.java
^	>3>å'†;ÏStarting remote animation *4com/android/server/wm/RemoteAnimationController.java
G	ì4A$s⁄⁄%s *4com/android/server/wm/RemoteAnimationController.java
Z	≠;è{ÉZtbcreateAppAnimations() *4com/android/server/wm/RemoteAnimationController.java
V	Ü5Eøˇ∫»¬	Add container=%s *4com/android/server/wm/RemoteAnimationController.java
Y	î8çÅº∆¬	Remove container=%s *4com/android/server/wm/RemoteAnimationController.java
`	ê;iÏ”ûcreateWallpaperAnimations() *4com/android/server/wm/RemoteAnimationController.java
c	∑9˝<NçWycreateNonAppWindowAnimations() *4com/android/server/wm/RemoteAnimationController.java
q	™2› E∑M⁄,onAnimationFinished(): mPendingAnimations=%d *4com/android/server/wm/RemoteAnimationController.java
v	m<P*Në7d1onAnimationFinished(): Notify animation finished: *4com/android/server/wm/RemoteAnimationController.java
R	™9ÛBÚ•Ÿg	container=%s *4com/android/server/wm/RemoteAnimationController.java
R	Œ3†ÒæÙ\	wallpaper=%s *4com/android/server/wm/RemoteAnimationController.java
O	º2n∂¥K`
	nonApp=%s *4com/android/server/wm/RemoteAnimationController.java
_	f1‡ìp& Finishing remote animation *4com/android/server/wm/RemoteAnimationController.java
i	ò3™πÅú$app-onAnimationFinished(): mOuter=%s *4com/android/server/wm/RemoteAnimationController.java
]	U0òÖ4±q6app-release(): mOuter=%s *4com/android/server/wm/RemoteAnimationController.java
S	—;≠ Å§√{startAnimation *4com/android/server/wm/RemoteAnimationController.java
é	Œ1≈Ü∂œEStarting remote display change: from [rot = %d], to [%dx%d, rot = %d] *8com/android/server/wm/RemoteDisplayChangeController.java
t	@6~xæ`Îø3resetTaskIntendedTask: calling finishActivity on %s *0com/android/server/wm/ResetTargetTaskHelper.java
	ñ>Ì¥Œ∑ß.>Removing activity %s from task=%s adding to task=%s Callers=%s *0com/android/server/wm/ResetTargetTaskHelper.java
q	m3íñ60Pushing next activity %s out to target's task %s *0com/android/server/wm/ResetTargetTaskHelper.java
p	6;`mó/Start pushing activity %s out to bottom task %s *0com/android/server/wm/ResetTargetTaskHelper.java
[	∞9û9>ˇ†ÉLooking for task of %s in %s *.com/android/server/wm/RootWindowContainer.java
i	t<}q>)Ç{*Skipping task: (mismatch activity/task) %s *.com/android/server/wm/RootWindowContainer.java
Y	 >˙åÚ^Skipping %s: voice session *.com/android/server/wm/RootWindowContainer.java
Z	¯9ÊÌ`>Skipping %s: different user *.com/android/server/wm/RootWindowContainer.java
\	\8Ì
ß‡ΩSkipping %s: mismatch root %s *.com/android/server/wm/RootWindowContainer.java
b	#4_?¬V}#Skipping %s: mismatch activity type *.com/android/server/wm/RootWindowContainer.java
v	Ù;ßJcïS7Comparing existing cls=%s /aff=%s to new cls=%s /aff=%s *.com/android/server/wm/RootWindowContainer.java
T	b;fNœa†–Found matching class! *.com/android/server/wm/RootWindowContainer.java
`	8ÁHPì;€!For Intent %s bringing to top: %s *.com/android/server/wm/RootWindowContainer.java
a	÷==J∏]…a"Found matching affinity candidate! *.com/android/server/wm/RootWindowContainer.java
N	e8sÁSæÛYNot a match: %s *.com/android/server/wm/RootWindowContainer.java
Y	y0˚Ãa˘:.New topFocusedDisplayId=%d *.com/android/server/wm/RootWindowContainer.java
Z	O8hjSURFACE RECOVER DESTROY: %s *.com/android/server/wm/RootWindowContainer.java
_	Ÿ0†áìf∆ Wallpaper may change!  Adjusting #*.com/android/server/wm/RootWindowContainer.java
p	Û4M,'∏¯91With display frozen, orientationChangeComplete=%b *.com/android/server/wm/RootWindowContainer.java
^	˝;Kôù≤{≥Performing post-rotate rotation *.com/android/server/wm/RootWindowContainer.java
º	6ˆΩë£(ï}handleNotObscuredLocked w: %s, w.mHasSurface: %b, w.isOnScreen(): %b, w.isDisplayedLw(): %b, w.mAttrs.userActivityTimeout: %d *.com/android/server/wm/RootWindowContainer.java
]	Ã:\æ˚§wmUserActivityTimeout set to %d *.com/android/server/wm/RootWindowContainer.java
Æ	˝7≥lÛ§„6oLooking for task of type=%s, taskAffinity=%s, intent=%s, info=%s, preferredTDA=%s, includeLaunchedFromBubble=%b *.com/android/server/wm/RootWindowContainer.java
L	c>w“QãB'No task found *.com/android/server/wm/RootWindowContainer.java
f		6v˚ó®µ'Create SleepToken: tag=%s, displayId=%d *.com/android/server/wm/RootWindowContainer.java
f	ﬁ2äDPëü¢'Remove SleepToken: tag=%s, displayId=%d *.com/android/server/wm/RootWindowContainer.java
d	]<íæÿXﬁz%allResumedActivitiesIdle: %s not idle *.com/android/server/wm/RootWindowContainer.java
i	s4ÅON â4*allPausedActivitiesComplete: r=%s state=%s *.com/android/server/wm/RootWindowContainer.java
~	j7+‡∞å√@1Failed to register MediaProjectionWatcherCallback *<com/android/server/wm/ScreenRecordingCallbackController.java
V	q6m,…,o  FREEZE %s: CREATE *2com/android/server/wm/ScreenRotationAnimation.java
ë	÷<42K/ò§NStart rotation animation. customAnim=%s, mCurRotation=%s, mOriginalRotation=%s *2com/android/server/wm/ScreenRotationAnimation.java
W	ó3`F?(Ø  FREEZE %s: DESTROY *2com/android/server/wm/ScreenRotationAnimation.java
ÿ	‘<’†Ñà_îScreenRotation still animating: type: %d
mDisplayAnimator: %s
mEnterBlackFrameAnimator: %s
mRotateScreenAnimator: %s
mScreenshotRotationAnimator: %s *2com/android/server/wm/ScreenRotationAnimation.java
i	Õ2˘vfpE…&ScreenRotationAnimation onAnimationEnd *2com/android/server/wm/ScreenRotationAnimation.java
a	'7WP]Pu.notifyImeWindowVisibilityChangedFromClient: %s *"com/android/server/wm/Session.java
Z	:[6D	Animation start for %s, anim=%s **com/android/server/wm/SurfaceAnimator.java
d	ú2∑• xµ)Cancelling animation restarting=%b for %s **com/android/server/wm/SurfaceAnimator.java
d	S>xT»´∫’)Reparenting to original parent: %s for %s **com/android/server/wm/SurfaceAnimator.java
V	õ7@Âg""ÙReparenting to leash for %s **com/android/server/wm/SurfaceAnimator.java
P	9:(!àm˘€  THUMBNAIL %s: CREATE *)com/android/server/wm/SurfaceFreezer.java
J	ë<‡ á&ÖàSetting Intent of %s to %s *com/android/server/wm/Task.java
Q	j;$w‡ÚÄ!Setting Intent of %s to target %s *com/android/server/wm/Task.java
n	a:h©tj'Y>Removing and adding activity %s to root task at top callers=%s *com/android/server/wm/Task.java
D	N9hü¸•∏ÒaddChild: %s at top. *com/android/server/wm/Task.java
Y	‹6µÂÜä )setLockTaskAuth: task=%s mLockTaskAuth=%s *com/android/server/wm/Task.java
k	0ê‰8;resumeNextFocusableActivityWhenRootTaskIsEmpty: %s, go home *com/android/server/wm/Task.java
Y	Á6ÈV-fû‡)Adding activity %s to task %s callers: %s *com/android/server/wm/Task.java
\	ê4‚MÙ∆,Applying last recents animation transaction.  *com/android/server/wm/Task.java
x	£:°_√df=App is requesting an orientation, return %d for display id=%d **com/android/server/wm/TaskDisplayArea.java
{	ï3;∞6˜‘@No app is requesting an orientation, return %d for display id=%d **com/android/server/wm/TaskDisplayArea.java
z	π3«=˙Qq|?Reparenting to display area on relaunch: rootTaskId=%d toTop=%b **com/android/server/wm/TaskDisplayArea.java
R	Î=∆‹›R˜App died while pausing: %s *'com/android/server/wm/TaskFragment.java
W	n9·˘"TíñWaiting for screen on due to %s *'com/android/server/wm/TaskFragment.java
O	≠4Cˇ)˛iäSleep needs to pause %s *'com/android/server/wm/TaskFragment.java
W	3;]JèBèÎSleep still waiting to pause %s *'com/android/server/wm/TaskFragment.java
^	˙5V¬⁄{†⁄&Sleep still need to stop %d activities *'com/android/server/wm/TaskFragment.java
n	5>ƒ"Û@g{6resumeTopActivity: Skip resume: some activity pausing. *'com/android/server/wm/TaskFragment.java
b	Ô7ë˘päL*resumeTopActivity: Top activity resumed %s *'com/android/server/wm/TaskFragment.java
h	∂8£ç¿ß=<0resumeTopActivity: Going to sleep and all paused *'com/android/server/wm/TaskFragment.java
U	8y‘ÿXeïresumeTopActivity: Pausing %s *'com/android/server/wm/TaskFragment.java
m	Ê<4‘œ5resumeTopActivity: Skip resume: need to start pausing *'com/android/server/wm/TaskFragment.java
u	§?¸«]í‡=resumeTopActivity: Top activity resumed (dontWaitForPause) %s *'com/android/server/wm/TaskFragment.java
[	4ıù˚˝ã#Moving to RESUMED: %s (in existing) *'com/android/server/wm/TaskFragment.java
U	•;Í£ClDäresumeTopActivity: Resumed %s *'com/android/server/wm/TaskFragment.java
`	…8¨È+ÿ÷ª(Resume failed; resetting state to %s: %s *'com/android/server/wm/TaskFragment.java
X	î<?ÜÎ≠3 resumeTopActivity: Restarting %s *'com/android/server/wm/TaskFragment.java
f	x0ü§8.startPausing: taskFrag =%s mResumedActivity=%s *'com/android/server/wm/TaskFragment.java
M	Z1]ÿ(üÊMoving to PAUSING: %s *'com/android/server/wm/TaskFragment.java
è	b>V⁄˝WAuto-PIP allowed, requesting PIP mode via requestStartTransition(): %s, willAutoPip: %b *'com/android/server/wm/TaskFragment.java
x	h=¡+ƒí∆∆@Auto-PIP allowed, entering PIP mode directly: %s, didAutoPip: %b *'com/android/server/wm/TaskFragment.java
^	H?[¿¨ÄÃ&Key dispatch not paused for screen off *'com/android/server/wm/TaskFragment.java
k	H3⁄÷mËëv3Activity not running or entered PiP, resuming next. *'com/android/server/wm/TaskFragment.java
T	”5!´ÛÛõEnqueueing pending pause: %s *'com/android/server/wm/TaskFragment.java
J	ÿ7x4cf¸ÉComplete pause: %s *'com/android/server/wm/TaskFragment.java
X	Ò3G<‡ÒˇD Executing finish of activity: %s *'com/android/server/wm/TaskFragment.java
}	Î;˝¯ˆHùEEnqueue pending stop if needed: %s wasStopping=%b visibleRequested=%b *'com/android/server/wm/TaskFragment.java
_	7◊T)æíÀ'App died during pause, not stopping: %s *'com/android/server/wm/TaskFragment.java
h	é0KﬁÓŸTaskFragment appeared name=%s *:com/android/server/wm/TaskFragmentOrganizerController.java
h	™<x∞ª«IŒTaskFragment vanished name=%s *:com/android/server/wm/TaskFragmentOrganizerController.java
l	ä8sèø∏-!TaskFragment info changed name=%s *:com/android/server/wm/TaskFragmentOrganizerController.java
É	Û;l«tA}E8TaskFragment parent info changed name=%s parentTaskId=%d *:com/android/server/wm/TaskFragmentOrganizerController.java
r	!5˙√9‹Y'Sending TaskFragment error exception=%s *:com/android/server/wm/TaskFragmentOrganizerController.java
l	9=Œ´|uí!Activity=%s reparent to taskId=%d *:com/android/server/wm/TaskFragmentOrganizerController.java
Ä	€06”a5Defer transition id=%d for TaskFragmentTransaction=%s *:com/android/server/wm/TaskFragmentOrganizerController.java
©	ä?Ò¬^æÌ^Deferred transition id=%d has been continued before the TaskFragmentTransaction=%s is finished *:com/android/server/wm/TaskFragmentOrganizerController.java
É	’6ı9ä˛f8Continue transition id=%d for TaskFragmentTransaction=%s *:com/android/server/wm/TaskFragmentOrganizerController.java
|	u4*ÚÆÁ¥01Register task fragment organizer=%s uid=%d pid=%d *:com/android/server/wm/TaskFragmentOrganizerController.java
~	g1$≠˘ûÒ°3Unregister task fragment organizer=%s uid=%d pid=%d *:com/android/server/wm/TaskFragmentOrganizerController.java
Ñ	Ÿ1µ¿LDm9Register remote animations for organizer=%s uid=%d pid=%d *:com/android/server/wm/TaskFragmentOrganizerController.java
Ü	y7d≠∫™˜‹;Unregister remote animations for organizer=%s uid=%d pid=%d *:com/android/server/wm/TaskFragmentOrganizerController.java
s	s7•y‚ò◊(Set state for organizer=%s uid=%d pid=%d *:com/android/server/wm/TaskFragmentOrganizerController.java
Z	v6Æñ8™Task appeared taskId=%d *2com/android/server/wm/TaskOrganizerController.java
Z	í>¨˝	≤ZTask vanished taskId=%d *2com/android/server/wm/TaskOrganizerController.java
^	7Tﬂ>ï‡£Task info changed taskId=%d *2com/android/server/wm/TaskOrganizerController.java
f	18-é≈ñè#Task back pressed on root taskId=%d *2com/android/server/wm/TaskOrganizerController.java
d	W;do_Zà˜!Register task organizer=%s uid=%d *2com/android/server/wm/TaskOrganizerController.java
f	09)!o¨#Unregister task organizer=%s uid=%d *2com/android/server/wm/TaskOrganizerController.java
f	N=j—VD‡#createRootTask unknown displayId=%d *2com/android/server/wm/TaskOrganizerController.java
k	–7 (&Æ~u(Create root task displayId=%d winMode=%d *2com/android/server/wm/TaskOrganizerController.java
i	ß7◊À M_&Delete root task display=%d winMode=%d *2com/android/server/wm/TaskOrganizerController.java
h	*3M>J@_ƒ%Set intercept back pressed on root=%b *2com/android/server/wm/TaskOrganizerController.java
q	
?ë1Å ?¯.Restart top activity process of Task taskId=%d *2com/android/server/wm/TaskOrganizerController.java
j	);i;ïÊÖ⁄4Starting a Recents transition which can be parallel. *%com/android/server/wm/Transition.java
u	3?œÃﬂ`ä?Transition %d: Set %s as transient-launch restoreBelowTaskId=%d *%com/android/server/wm/Transition.java
Q	ç7ˆö¨…  transient hide: taskId=%d *%com/android/server/wm/Transition.java
n	(8b÷xÀåÿ8Skipping update changes for restore transient hide tasks *%com/android/server/wm/Transition.java
i	E4ó≈!:33Force update transient hide task for restore %d: %s *%com/android/server/wm/Transition.java
k	£?oƒÌÒ%5Override sync-method for %s because seamless rotating *%com/android/server/wm/Transition.java
L	12@	À¯&Starting Transition %d *%com/android/server/wm/Transition.java
U	A3i›'øCollecting in transition %d: %s *%com/android/server/wm/Transition.java
j	23◊wÍ 4 Creating Ready-group for Transition %d with root=%s *%com/android/server/wm/Transition.java
\	À<ΩCﬂMH&Existence Changed in transition %d: %s *%com/android/server/wm/Transition.java
P	Ò1∑‰'ÚJ…Set transition ready=%b %d *%com/android/server/wm/Transition.java
^	;°í›_Óæ(  Commit activity becoming invisible: %s *%com/android/server/wm/Transition.java
e	w3≠^=8/  Skipping post-transition snapshot for task %d *%com/android/server/wm/Transition.java
_	‡1Â%\Î÷)  Commit wallpaper becoming invisible: %s *%com/android/server/wm/Transition.java
M	06Üèf†Aborting Transition: %d *%com/android/server/wm/Transition.java
R	Í<õvXÁõÛForce Playing Transition: %d *%com/android/server/wm/Transition.java
L	>6LÁj3Ì#%d: Met condition: %s *%com/android/server/wm/Transition.java
S	ã=kNÇòæµCalling onTransitionReady: %s *%com/android/server/wm/Transition.java
Ç	œ=r†Ç’fLApply and finish immediately because player is disabled for transition #%d . *%com/android/server/wm/Transition.java
D	}3ô˜Cyı      SKIP: %s *%com/android/server/wm/Transition.java
N	ä23’RÏR⁄      SKIP: is wallpaper *%com/android/server/wm/Transition.java
L	b;gIµÏø      check sibling %s *%com/android/server/wm/Transition.java
q	ì0åãô+Æ®;        SKIP: sibling is visible but not part of transition *%com/android/server/wm/Transition.java
\	8<‡åñöm&        unrelated invisible sibling %s *%com/android/server/wm/Transition.java
c	X:ıDÈi¡5-        sibling is a participant with mode %s *%com/android/server/wm/Transition.java
b	™3¬âYÑaj,          SKIP: common mode mismatch. was %s *%com/android/server/wm/Transition.java
E	/:OóÂ¶CÑ    checking %s *%com/android/server/wm/Transition.java
Z	”3âLÑ8`°$      SKIP: its sibling was rejected *%com/android/server/wm/Transition.java
O	l?¡™uRRö        keep as target %s *%com/android/server/wm/Transition.java
Z	™;P~º4∑$        keep as cfg-at-end target %s *%com/android/server/wm/Transition.java
T	«9ù£èü        remove from targets %s *%com/android/server/wm/Transition.java
_	º?7ä∞√≠)      CAN PROMOTE: promoting to parent %s *%com/android/server/wm/Transition.java
p	ˇ=Äö–øQ
:Start calculating TransitionInfo based on participants: %s *%com/android/server/wm/Transition.java
Q	˚>:öûÙkõ  Rejecting as detached: %s *%com/android/server/wm/Transition.java
W	v5*ÂÌÕè!  Rejecting as no-op: %s  vis: %b *%com/android/server/wm/Transition.java
K	9™˙úm¸Ô  Initial targets: %s *%com/android/server/wm/Transition.java
I	89Z…H◊qÄ  Final targets: %s *%com/android/server/wm/Transition.java
O	Ç?PFÂ¬÷ Add condition %s for #%d *%com/android/server/wm/Transition.java
Y	^0Ÿ4˙Êi# Met condition %s for #%d (%d left) *%com/android/server/wm/Transition.java
b	∞>ÔÉ£'ÃΩ, Setting Ready-group to %b. group=%s from %s *%com/android/server/wm/Transition.java
P	ø3gÏ‰NœS Setting allReady override *%com/android/server/wm/Transition.java
o	>›æ±’¥“9 allReady query: used=%b override=%b defer=%d states=[%s] *%com/android/server/wm/Transition.java
L	e0F
ÿ˚w%Screenshotting %s [%s] *%com/android/server/wm/Transition.java
W	.=$l†ﬂ√¸Creating Transition: %s */com/android/server/wm/TransitionController.java
b	ﬁ9V¯oÁ"Start collecting in Transition: %s */com/android/server/wm/TransitionController.java
v	≥?>‡ã7Ë¿6Registering transition player %s over %d other players  */com/android/server/wm/TransitionController.java
a	]5s·óﬂ≈!Registering transition player %s   */com/android/server/wm/TransitionController.java
Ç	œ=Sâ£ -BAttempt to unregister transition player %s but it isn't registered  */com/android/server/wm/TransitionController.java
â	c4O+O<3IUnregistering active transition player %s at index=%d leaving %d in stack  */com/android/server/wm/TransitionController.java
Ç		1ª™SAÿBUnregistering transition player %s at index=%d leaving %d in stack  */com/android/server/wm/TransitionController.java
Ö	„?bè≈}7≈EDisabling player for transition #%d because display isn't enabled yet */com/android/server/wm/TransitionController.java
^	’;:Y8ó7Requesting StartTransition: %s */com/android/server/wm/TransitionController.java
U	W?≠à˛Q¨Finish Transition: %s */com/android/server/wm/TransitionController.java
f	;ò)2n°È&Moving #%d from collecting to waiting.  */com/android/server/wm/TransitionController.java
d	R0*4¿Äù$Playing #%d in parallel on track #%d */com/android/server/wm/TransitionController.java
^	‘0ı_*ÃôMarking #%d animation as SYNC. */com/android/server/wm/TransitionController.java
W	ì? M¬“â≥Queueing transition: %s  */com/android/server/wm/TransitionController.java
\	>º∂YÁÛŸQueueing legacy sync-set: %s  */com/android/server/wm/TransitionController.java
B	ª4¿…ä¨‰π%s  */com/android/server/wm/TransitionController.java
O	|:MÅì/k;    startWCT=%s  */com/android/server/wm/TransitionController.java
K	Ø5¢∞∑\G    info=%s  */com/android/server/wm/TransitionController.java
í	_<Íßç˚–/Aunregister failed, couldn't find deathRecipient for %s with id=%d '*@com/android/server/wm/TrustedPresentationListenerController.java
â	;Wg3O«™8Registering listener=%s with id=%d for window=%s with %s '*@com/android/server/wm/TrustedPresentationListenerController.java
u	:3÷íıi93$Unregistering listener=%s with id=%d '*@com/android/server/wm/TrustedPresentationListenerController.java
d	O2*§–XChecking %d windows '*@com/android/server/wm/TrustedPresentationListenerController.java
\	T0;∞‹ÇkSkipping %s '*@com/android/server/wm/TrustedPresentationListenerController.java
v	-=ôÿ’W„˙%Skipping %s, no associated display %d '*@com/android/server/wm/TrustedPresentationListenerController.java
á	?‘µ5L=6coveredRegionsAbove updated with %s frame:%s region:%s '*@com/android/server/wm/TrustedPresentationListenerController.java
é	D=[2µø€=checkIfInThreshold fractionRendered=%f alpha=%f currTimeMs=%d '*@com/android/server/wm/TrustedPresentationListenerController.java
©	µ?¢ÀﬁsÀ‡XlastState=%s newState=%s alpha=%f minAlpha=%f fractionRendered=%f minFractionRendered=%f '*@com/android/server/wm/TrustedPresentationListenerController.java
~	;< ΩKTãV-Adding untrusted state listener=%s with id=%d '*@com/android/server/wm/TrustedPresentationListenerController.java
|	/7ß∞QK+Adding trusted state listener=%s with id=%d '*@com/android/server/wm/TrustedPresentationListenerController.java
•	3ÛÏMZ∏TcomputeFractionRendered: visibleRegion=%s screenBounds=%s contentSize=%s scale=%f,%f '*@com/android/server/wm/TrustedPresentationListenerController.java
j	ë=Å¸‡yfractionRendered scale=%f '*@com/android/server/wm/TrustedPresentationListenerController.java
u	t4¶Ûª≠˘$fractionRendered boundsOverSource=%f '*@com/android/server/wm/TrustedPresentationListenerController.java
l	n3º¿E'	Wallpaper of display=%s is not visible *4com/android/server/wm/WallpaperAnimationAdapter.java
S	,=êáÅzŸpstartAnimation *4com/android/server/wm/WallpaperAnimationAdapter.java
Y	1r¸ëroonAnimationCancelled *4com/android/server/wm/WallpaperAnimationAdapter.java
w	„?ù3ø∑8Hiding wallpaper %s from %s target=%s prev=%s callers=%s #*.com/android/server/wm/WallpaperController.java
]	8ƒú˜⁄†Waiting for offset complete... #*.com/android/server/wm/WallpaperController.java
O	»9gØ*	2≠Offset complete! #*.com/android/server/wm/WallpaperController.java
j	Ω4¸[AE:+Timeout waiting for wallpaper to offset: %s #*.com/android/server/wm/WallpaperController.java
e	•:'ÖÁæœ&No longer animating wallpaper targets! #*.com/android/server/wm/WallpaperController.java
p	Ê3+e|æÀ1New wallpaper target: %s prevTarget: %s caller=%s #*.com/android/server/wm/WallpaperController.java
b	Á4´êZœN#New animation: %s old animation: %s #*.com/android/server/wm/WallpaperController.java
x	L1‚wΩGÛi9Animating wallpapers: old: %s hidden=%b new: %s hidden=%b #*.com/android/server/wm/WallpaperController.java
^	ƒ8¬0/≥√Old wallpaper still the target. #*.com/android/server/wm/WallpaperController.java
Ä	‚1ÿ†IíAupdateWallpaperTokens requestedVisibility=%b on keyguardLocked=%b #*.com/android/server/wm/WallpaperController.java
{	è5JemÓœf<Wallpaper at display %d - visibility: %b, keyguardLocked: %b #*.com/android/server/wm/WallpaperController.java
Z	X6ˆÑøˇ´àWallpaper target=%s prev=%s #*.com/android/server/wm/WallpaperController.java
ç	’;Mü"4µNWallpaper should be visible but has not been drawn yet. mWallpaperDrawState=%d #*.com/android/server/wm/WallpaperController.java
f	<?–ˇ5zú9'New home screen wallpaper: %s, prev: %s #*.com/android/server/wm/WallpaperController.java
m	ã2'^x›Z`.New lock/shared screen wallpaper: %s, prev: %s #*.com/android/server/wm/WallpaperController.java
]	4V*#∏€ëWallpaper token %s visible=%b #*/com/android/server/wm/WallpaperWindowToken.java
u	ô8B—mπd5commitVisibility: %s: visible=%b mVisibleRequested=%b */com/android/server/wm/WallpaperWindowToken.java
V	?˝œ€Ìúµ>>> OPEN TRANSACTION animate *)com/android/server/wm/WindowAnimator.java
W	^8/_\Óì»<<< CLOSE TRANSACTION animate *)com/android/server/wm/WindowAnimator.java
_	M>ºÆU±e∑$%s is requesting orientation %d (%s) **com/android/server/wm/WindowContainer.java
e	√4ﬁ∫£‚p`*Starting animation on %s: type=%d, anim=%s **com/android/server/wm/WindowContainer.java
Ñ	Ü<@ı¥◊ÜIapplyAnimation: transition animation is disabled or skipped. container=%s **com/android/server/wm/WindowContainer.java
f	j07"¯Õ +applyAnimation: transit=%s, enter=%b, wc=%s **com/android/server/wm/WindowContainer.java
W	Í6Òß®©dapplyAnimation: container=%s **com/android/server/wm/WindowContainer.java
ò	
=@8’HQ]Loading animation for app transition. transit=%s enter=%b frame=%s insets=%s surfaceInsets=%s **com/android/server/wm/WindowContainer.java
m	ë8¿˛8#}2Loaded animation %s for %s, duration: %d, stack=%s **com/android/server/wm/WindowContainer.java
S	™:¸Oîˇ*IonSyncFinishedDrawing %s **com/android/server/wm/WindowContainer.java
Q	d0^C1*¶åsetSyncGroup #%d on %s **com/android/server/wm/WindowContainer.java
V	≠8ÑlCiG finishSync cancel=%b for %s **com/android/server/wm/WindowContainer.java
Ä	æ>ßL‘Ø∆ƒEError sending initial configuration change to WindowContainer overlay **com/android/server/wm/WindowContainer.java
y	ñ9yÒæ·G>Error sending initial insets change to WindowContainer overlay **com/android/server/wm/WindowContainer.java
Z	2‡Xgv,˛  THUMBNAIL %s: CREATE *3com/android/server/wm/WindowContainerThumbnail.java
g	î6Ç!”The listener does not exist. *:com/android/server/wm/WindowContextListenerController.java
à	L1¶P›öÆ0=The listener has already been attached to the same display id *:com/android/server/wm/WindowContextListenerController.java
é	Â;Å¸°g3UCCould not register window container listener token=%s, container=%s *:com/android/server/wm/WindowContextListenerController.java
W	Ö;∫7ª2Window Manager Crash %s */com/android/server/wm/WindowManagerService.java
Ä	≥2c"^Gı’@Attempted to add window with a client %s that is dead. Aborting. */com/android/server/wm/WindowManagerService.java
á	£=zx$≠édGAttempted to add window with token that is not a window: %s.  Aborting. */com/android/server/wm/WindowManagerService.java
á	q9» É/àGAttempted to add window with token that is a sub-window: %s.  Aborting. */com/android/server/wm/WindowManagerService.java
á	Ò2ÒD:JËÌGAttempted to add window to a display that does not exist: %d. Aborting. */com/android/server/wm/WindowManagerService.java
£	1K+˝∏ëocAttempted to add window to a display for which the application does not have access: %d.  Aborting. */com/android/server/wm/WindowManagerService.java
Z	{<Ù¥Ü–Window %s is already added */com/android/server/wm/WindowManagerService.java
ë	;3πıØÒQAttempted to add private presentation window to a non-private display.  Aborting. */com/android/server/wm/WindowManagerService.java
ä	V7≠’ÖwiJAttempted to add presentation window to a non-suitable display.  Aborting. */com/android/server/wm/WindowManagerService.java
i	;>!càü™‹)Trying to add window with invalid user=%d */com/android/server/wm/WindowManagerService.java
Ä	T>úáUä3@Attempted to add window with non-application token .%s Aborting. */com/android/server/wm/WindowManagerService.java
Ñ	#9ZÙª˜±•DAttempted to add window with exiting application token .%s Aborting. */com/android/server/wm/WindowManagerService.java
è	ﬁ0⁄_DÇpÏOAttempted to add starting window to token with already existing starting window */com/android/server/wm/WindowManagerService.java
}	21Ö¿íÏÊ=Attempted to add starting window to token but already cleaned */com/android/server/wm/WindowManagerService.java
Ç	0⁄O>]¥BAttempted to add input method window with bad token %s.  Aborting. */com/android/server/wm/WindowManagerService.java
á	˛2ºjKø¶GAttempted to add voice interaction window with bad token %s.  Aborting. */com/android/server/wm/WindowManagerService.java
	“:∫¿◊îœk?Attempted to add wallpaper window with bad token %s.  Aborting. */com/android/server/wm/WindowManagerService.java
ã	2£˘Ó˜
hKAttempted to add Accessibility overlay window with bad token %s.  Aborting. */com/android/server/wm/WindowManagerService.java
}	§2§ÆP|=Attempted to add a toast window with bad token %s.  Aborting. */com/android/server/wm/WindowManagerService.java
	»5◊πpQˇ‰?Attempted to add QS dialog window with bad token %s.  Aborting. */com/android/server/wm/WindowManagerService.java
r	c4»`1v/2Non-null activity for system window of rootType=%d */com/android/server/wm/WindowManagerService.java
t	o>1	P„Ô4Adding more than one toast window for UID at a time. */com/android/server/wm/WindowManagerService.java
¬	E3X¨èº®óÅWindow types in WindowContext and LayoutParams.type should match! Type from LayoutParams is %d, but type from WindowContext is %d */com/android/server/wm/WindowManagerService.java
_	9çJw!ˆ´addWindow: %s startingWindow=%s */com/android/server/wm/WindowManagerService.java
n	†?‡Öü„πÿ.addWindow: New client %s: window=%s Callers=%s */com/android/server/wm/WindowManagerService.java
Ö	8Ès'C{öEAttempted to add application window with unknown token %s.  Aborting. */com/android/server/wm/WindowManagerService.java
Ü	6>&AóFAttempted to add input method window with unknown token %s.  Aborting. */com/android/server/wm/WindowManagerService.java
ã	î6¢“æ/≈)KAttempted to add voice interaction window with unknown token %s.  Aborting. */com/android/server/wm/WindowManagerService.java
É	π7xŒ#]€CAttempted to add wallpaper window with unknown token %s.  Aborting. */com/android/server/wm/WindowManagerService.java
É	Æ4“…µùÅóCAttempted to add QS dialog window with unknown token %s.  Aborting. */com/android/server/wm/WindowManagerService.java
è	÷?á.%;OAttempted to add Accessibility overlay window with unknown token %s.  Aborting. */com/android/server/wm/WindowManagerService.java
Å	= ©›Y˜PAAttempted to add a toast window with unknown token %s.  Aborting. */com/android/server/wm/WindowManagerService.java
a	54\eI!postWindowRemoveCleanupLocked: %s */com/android/server/wm/WindowManagerService.java
Z	ö7¿g6±ö Final remove of window: %s */com/android/server/wm/WindowManagerService.java
S	•7.¸ÙU≥Removing %s from %s */com/android/server/wm/WindowManagerService.java
d	=◊ü\s$Relayout %s: oldVis=%d newVis=%d. %s */com/android/server/wm/WindowManagerService.java
}	ó8≈õÖus=Exception thrown when creating surface for client %s (%s). %s */com/android/server/wm/WindowManagerService.java
a	?π8ÙyÙ!Relayout of %s: focusMayChange=%b 
*/com/android/server/wm/WindowManagerService.java
y	”=ºS∫àr¸9Set animatingExit: reason=startExitingAnimation/%s win=%s */com/android/server/wm/WindowManagerService.java
V	Ù8!á¡õ¯ZOUT SURFACE %s: copied */com/android/server/wm/WindowManagerService.java
g	◊<¨ªd	F˝'Failed to create surface control for %s */com/android/server/wm/WindowManagerService.java
e	S3∫ò„jÅ≥%finishDrawingWindow: %s mDrawState=%s */com/android/server/wm/WindowManagerService.java
u	ê3XÇ›9‹5Permission Denial: %s from pid=%d, uid=%d requires %s */com/android/server/wm/WindowManagerService.java
á	Ï0Aá‡3?GaddWindowToken: Attempted to add token: %s for non-exiting displayId=%d */com/android/server/wm/WindowManagerService.java
£	Q6HÌÕÚcaddWindowToken: Attempted to add binder token: %s for already created window token: %s displayId=%d */com/android/server/wm/WindowManagerService.java
ë	Ã6o´	0tQattachWindowContextToDisplayArea: calling from non-existing process pid=%d uid=%d */com/android/server/wm/WindowManagerService.java
è	¡<„% tmOattachWindowContextToDisplayArea: trying to attach to a non-existing display:%d */com/android/server/wm/WindowManagerService.java
î	0úNlü˛†TattachWindowContextToDisplayContent: calling from non-existing process pid=%d uid=%d */com/android/server/wm/WindowManagerService.java
ë	t1ƒ◊ısQattachWindowContextToWindowToken: calling from non-existing process pid=%d uid=%d */com/android/server/wm/WindowManagerService.java
m	H1^¶ñät„-Then token:%s is invalid. It might be removed */com/android/server/wm/WindowManagerService.java
ì	^=´m˝ôSreparentWindowContextToDisplayArea: calling from non-existing process pid=%d uid=%d */com/android/server/wm/WindowManagerService.java
ë	_4É"ü¿ÒSQreparentWindowContextToDisplayArea: trying to attach to a non-existing display:%d */com/android/server/wm/WindowManagerService.java
c	è=)9ÿ,Ó#Reparenting from dc to displayId=%d */com/android/server/wm/WindowManagerService.java
ç	W4«Ÿπ|ÒMremoveWindowToken: Attempted to remove token: %s for non-exiting displayId=%d */com/android/server/wm/WindowManagerService.java
}	O3–ZÃ $=removeWindowToken: Attempted to remove non-existing token: %s */com/android/server/wm/WindowManagerService.java
ë	;9	ãd±,GQmoveWindowTokenToDisplay: Attempted to move token: %s to non-exiting displayId=%d */com/android/server/wm/WindowManagerService.java
Ç	5ZÔË^-ZBmoveWindowTokenToDisplay: Attempted to move non-existing token: %s */com/android/server/wm/WindowManagerService.java
ã	á6ôÅï®≈'KmoveWindowTokenToDisplay: Cannot move to the original display for token: %s */com/android/server/wm/WindowManagerService.java
©	57≠ÌG9≤ÛiNot moving display (displayId=%d) to top. Top focused displayId=%d. Reason: FLAG_STEAL_TOP_FOCUS_DISABLED */com/android/server/wm/WindowManagerService.java
Æ	Ô0·ôIcÍnenableScreenAfterBoot: mDisplayEnabled=%b mForceDisplayEnabled=%b mShowingBootMessages=%b mSystemBooted=%b. %s */com/android/server/wm/WindowManagerService.java
≥	(={ı¶î=¶senableScreenIfNeededLocked: mDisplayEnabled=%b mForceDisplayEnabled=%b mShowingBootMessages=%b mSystemBooted=%b. %s */com/android/server/wm/WindowManagerService.java
k	42≈à•~+***** BOOT TIMEOUT: forcing display enabled */com/android/server/wm/WindowManagerService.java
¨	]:ß0ﬁZí–lperformEnableScreen: mDisplayEnabled=%b mForceDisplayEnabled=%b mShowingBootMessages=%b mSystemBooted=%b. %s */com/android/server/wm/WindowManagerService.java
|	
5ww~çÆó<performEnableScreen: Waited %dms for all windows to be drawn */com/android/server/wm/WindowManagerService.java
n	k6Û_FfúÍ.performEnableScreen: Waiting for anim complete */com/android/server/wm/WindowManagerService.java
k	j6¶˙ﬂG%+performEnableScreen: bootFinished() failed. */com/android/server/wm/WindowManagerService.java
e	`4ØE—+]%******************** ENABLING SCREEN! */com/android/server/wm/WindowManagerService.java
x	z3ä.Q_L8Notified TransitionController that the display is ready. */com/android/server/wm/WindowManagerService.java
u	»8î∂1c„5checkBootAnimationComplete: Waiting for anim complete */com/android/server/wm/WindowManagerService.java
o	o:Ö|T÷Éé/checkBootAnimationComplete: Animation complete! */com/android/server/wm/WindowManagerService.java
§	»;æÏ%©]˚dshowBootMessage: msg=%s always=%b mAllowBootMessages=%b mShowingBootMessages=%b mSystemBooted=%b. %s */com/android/server/wm/WindowManagerService.java
Ø	à5±Êi¥è)ohideBootMessagesLocked: mDisplayEnabled=%b mForceDisplayEnabled=%b mShowingBootMessages=%b mSystemBooted=%b. %s */com/android/server/wm/WindowManagerService.java
Ü	1€çaå§FfreezeDisplayRotation: current rotation=%d, new rotation=%d, caller=%s */com/android/server/wm/WindowManagerService.java
e	ç0◊stø|%thawRotation: mRotation=%d, caller=%s */com/android/server/wm/WindowManagerService.java
Ñ	b4w8éƒdDupdateRotationUnchecked: alwaysSendConfiguration=%b forceRelayout=%b */com/android/server/wm/WindowManagerService.java
Y	h4xä´ô?xView server did not start */com/android/server/wm/WindowManagerService.java
p	ß=ˆ¯3wµê0Could not send command %s with parameters %s. %s */com/android/server/wm/WindowManagerService.java
ú	ì3ÿ á]F\Devices still not ready after waiting %d milliseconds before attempting to detect safe mode. */com/android/server/wm/WindowManagerService.java
u	Q?©)NÕ5SAFE MODE ENABLED (menu=%d s=%d dpad=%d trackball=%d) */com/android/server/wm/WindowManagerService.java
U	2odcc¢DSAFE MODE not enabled */com/android/server/wm/WindowManagerService.java
X	'4êÛ[3m–Focus changing: %s -> %s */com/android/server/wm/WindowManagerService.java
[	_:IW„≈äApp freeze timeout expired. */com/android/server/wm/WindowManagerService.java
e	8Q§∑‰ÍP%Timeout waiting for drawn: undrawn=%s */com/android/server/wm/WindowManagerService.java
a	<ÒåwjÁ‡!CHECK_IF_BOOT_ANIMATION_FINISHED: */com/android/server/wm/WindowManagerService.java
Z	Î;Æ2ú˙ÏwFORCED DISPLAY SIZE: %dx%d */com/android/server/wm/WindowManagerService.java
_	Ò82ƒLPy4FORCED DISPLAY SCALING DISABLED */com/android/server/wm/WindowManagerService.java
n	å6˜î≠$9.Failed looking up window session=%s callers=%s */com/android/server/wm/WindowManagerService.java
i	Q8°˝‡)Changing surface while display frozen: %s */com/android/server/wm/WindowManagerService.java
á	Ë:?l‹l/ËGWaiting for drawn %s: removed=%b visible=%b mHasSurface=%b drawState=%d */com/android/server/wm/WindowManagerService.java
]	è<@¨ô¿Aborted waiting for drawn: %s */com/android/server/wm/WindowManagerService.java
S	í5XDÊºóWindow drawn win=%s */com/android/server/wm/WindowManagerService.java
R	÷0»ıË≠˚&All windows drawn! */com/android/server/wm/WindowManagerService.java
Å	&1§_&ìÈAstartFreezingDisplayLocked: exitAnim=%d enterAnim=%d called by %s */com/android/server/wm/WindowManagerService.java
Ä	97Çª¬Ù\?østopFreezingDisplayLocked: Returning waitingForConfig=%b, waitingForRemoteDisplayChange=%b, mAppsFreezingScreen=%d, mWindowsFreezingScreen=%d, mClientFreezingScreen=%b, mOpeningApps.size()=%d */com/android/server/wm/WindowManagerService.java
i	4Â◊ñè†)stopFreezingDisplayLocked: Unfreezing now */com/android/server/wm/WindowManagerService.java
B	ç?¡XÁ
%s */com/android/server/wm/WindowManagerService.java
i	j8∞VÎœ∞)**** Dismissing screen rotation animation */com/android/server/wm/WindowManagerService.java
_	…6«Oá˛Performing post-rotate rotation */com/android/server/wm/WindowManagerService.java
t		?tR4unable to call receiver for empty keyboard shortcuts */com/android/server/wm/WindowManagerService.java
X	˙5∂∆ËæBad requesting window %s */com/android/server/wm/WindowManagerService.java
n	Ä>Ëm["$™.Invalid displayId for requestScrollCapture: %d */com/android/server/wm/WindowManagerService.java
Ö	I;ØãFà∂ ErequestScrollCapture: caught exception dispatching to window.token=%s */com/android/server/wm/WindowManagerService.java
	◊8z…“ÀyÉ?requestScrollCapture: caught exception dispatching callback: %s */com/android/server/wm/WindowManagerService.java
Ñ	81qqô7˙ÂDAttempted to get windowing mode of a display that does not exist: %d */com/android/server/wm/WindowManagerService.java
Ñ	;>â
ƒß6DAttempted to set windowing mode to a display that does not exist: %d */com/android/server/wm/WindowManagerService.java
Å	<—≤]oJ:AAttempted to get remove mode of a display that does not exist: %d */com/android/server/wm/WindowManagerService.java
Å	+7dçj£≤AAttempted to set remove mode to a display that does not exist: %d */com/android/server/wm/WindowManagerService.java
z	‘>Ç•ÓàL:Attempted to get flag of a display that does not exist: %d */com/android/server/wm/WindowManagerService.java
z	˜1eaúq:Attempted to set flag to a display that does not exist: %d */com/android/server/wm/WindowManagerService.java
à	X;Ω“ò>¨˜HAttempted to get system decors flag of a display that does not exist: %d */com/android/server/wm/WindowManagerService.java
à	v>"∫áÔj*HAttempted to set system decors flag to a display that does not exist: %d */com/android/server/wm/WindowManagerService.java
Ä	á>Ñö˝ŸG@Attempted to get IME policy of a display that does not exist: %d */com/android/server/wm/WindowManagerService.java
Ä	9˚EÄì6@Attempted to set IME policy to a display that does not exist: %d */com/android/server/wm/WindowManagerService.java
|	r7π§ËP<setWallpaperShowWhenLocked: non-existent wallpaper token: %s */com/android/server/wm/WindowManagerService.java
w	 4ˇ/Ù≥	7setWallpaperCropHints: non-existent wallpaper token: %s */com/android/server/wm/WindowManagerService.java
S	ö2«“ôWÍòhideIme target: %s  */com/android/server/wm/WindowManagerService.java
[	®=de<˜hideIme Control target: %s  */com/android/server/wm/WindowManagerService.java
á	B;Ωô¨æ[HGAttempted to get home support flag of a display that does not exist: %d */com/android/server/wm/WindowManagerService.java
É	$?ﬂŸòb}CSkip onPointerDownOutsideFocusLocked due to input target changed %s */com/android/server/wm/WindowManagerService.java
l	∞7®å⁄!W„,onPointerDownOutsideFocusLocked called on %s */com/android/server/wm/WindowManagerService.java
£	Ê8dWπbôcgrantEmbeddedWindowFocus win=%s dropped focus so setting focus to null since no candidate was found 
*/com/android/server/wm/WindowManagerService.java
m	7E xÒ´-grantEmbeddedWindowFocus win=%s grantFocus=%s 
*/com/android/server/wm/WindowManagerService.java
¡	“</¬ï‰ÕT|TaskFragmentTransaction changes are not collected in transition because there is an ongoing sync for applySyncTransaction(). *4com/android/server/wm/WindowOrganizerController.java
h	i7QÅÂeÆ#Apply window transaction, syncId=%d *4com/android/server/wm/WindowOrganizerController.java
q	Ú=∑Ì˘!´°,Restoring transient order: invalid container *4com/android/server/wm/WindowOrganizerController.java
l	∫5›kè;å'Restoring transient order: invalid task *4com/android/server/wm/WindowOrganizerController.java
o	ª4Œˆı&° *Restoring transient order: no restore task *4com/android/server/wm/WindowOrganizerController.java
x	 7éö»K°h3Restoring transient order: restoring behind task=%d *4com/android/server/wm/WindowOrganizerController.java
^	ÿ2õ_ÈSet sync ready, syncId=%d *4com/android/server/wm/WindowOrganizerController.java
a	ô:#,iÑÌZTransaction ready, syncId=%d *4com/android/server/wm/WindowOrganizerController.java
c	≈1úÇï¡ø Sending to proc %s new config %s *2com/android/server/wm/WindowProcessController.java
S	ù:‹l◊Héõ%s: Setting back callback %s $*&com/android/server/wm/WindowState.java
F	˘7∏RÉÁpAdding %s to %s *&com/android/server/wm/WindowState.java
|	∂;¯ÍΩ∑zEResize reasons for w=%s:  %s configChanged=%b didFrameInsetsChange=%b *&com/android/server/wm/WindowState.java
I	˚;-Oú™$àResizing window %s *&com/android/server/wm/WindowState.java
s	†9]‡øyc⁄<Orientation not waiting for draw in %s, surfaceController %s *&com/android/server/wm/WindowState.java
Q	7Ô¡˙ˇ™HonMovedByResize: Moving %s *&com/android/server/wm/WindowState.java
n	Ó<£C_3j7Set animatingExit: reason=onAppVisibilityChanged win=%s *&com/android/server/wm/WindowState.java
L	Í9∑f.W¿onResize: Resizing %s *&com/android/server/wm/WindowState.java
b	;µ&Ëø+WS.removeImmediately: %s Already removed... *&com/android/server/wm/WindowState.java
V	L7ÑäˇπÄ6removeIfPossible: %s callers=%s *&com/android/server/wm/WindowState.java
Q	≈0µ{∞ÒÒºStarting window removed %s *&com/android/server/wm/WindowState.java
h	≈;‡H8AwØ1Remove client=%x, surfaceController=%s Callers=%s 
*&com/android/server/wm/WindowState.java
‘	,4¶Î‘˘‹vúRemove %s: mSurfaceControl=%s mAnimatingExit=%b mRemoveOnExit=%b mHasSurface=%b surfaceShowing=%b animating=%b app-animation=%b mDisplayFrozen=%b callers=%s *&com/android/server/wm/WindowState.java
m	’<‡M$⁄l6Set animatingExit: reason=remove/applyAnimation win=%s *&com/android/server/wm/WindowState.java
\	:'g6~∆%Not removing %s due to exit animation *&com/android/server/wm/WindowState.java
j	ˆ=ÄõáT=3Set animatingExit: reason=remove/isAnimating win=%s *&com/android/server/wm/WindowState.java
g	@8£Â‡g™0setAnimationLocked: setting mFocusMayChange true *&com/android/server/wm/WindowState.java
g	„8∏åÃ¿˝0WindowState.hideLw: setting mFocusMayChange true *&com/android/server/wm/WindowState.java
U	97'HVLzset mOrientationChanging of %s *&com/android/server/wm/WindowState.java
é	;•?JŒ‹÷Wwin=%s destroySurfaces: appStopped=%b win.mWindowRemovalAllowed=%b win.mRemoveOnExit=%b *&com/android/server/wm/WindowState.java
h	„>Ò?“e1Clear animatingExit: reason=destroySurface win=%s *&com/android/server/wm/WindowState.java
T	∑?ˇp"ˆüReporting new frame to %s: %s *&com/android/server/wm/WindowState.java
T	¿8•∏'a¨%Resizing %s WITH DRAW PENDING *&com/android/server/wm/WindowState.java
b	ó>ótAÓ ∞+Requested redraw for orientation change: %s *&com/android/server/wm/WindowState.java
R	ú2Öô,ÆÆ∑notifyInsetsChanged for %s  !*&com/android/server/wm/WindowState.java
Y	’:– \=»”"notifyInsetsControlChanged for %s  !*&com/android/server/wm/WindowState.java
d	3 ®¿?ô-performShowLocked: mDrawState=HAS_DRAWN in %s *&com/android/server/wm/WindowState.java
`	£8á‹-èœi)shouldWaitAnimatingExit: isTransition: %s *&com/android/server/wm/WindowState.java
_	Z0Iå[¶>(shouldWaitAnimatingExit: isAnimating: %s *&com/android/server/wm/WindowState.java
e	_4AÍÖêÁ.shouldWaitAnimatingExit: isWallpaperTarget: %s *&com/android/server/wm/WindowState.java
e	Y2˝ 	¿….Clear window stuck on animatingExit status: %s *&com/android/server/wm/WindowState.java
	´=√EÎãÚHonExitAnimationDone in %s: exiting=%b remove=%b selfAnimating=%b anim=%s *&com/android/server/wm/WindowState.java
_	Y2Ä“FÈ (Exit animation finished in %s: remove=%b *&com/android/server/wm/WindowState.java
k	ï8∏˛È—ûî4Clear animatingExit: reason=exitAnimationDone win=%s *&com/android/server/wm/WindowState.java
m	~?{Êa‘=‘6Clear animatingExit: reason=clearAnimatingFlags win=%s *&com/android/server/wm/WindowState.java
o	…1ÿí¢ÁÕ∑8Clear animatingExit: reason=relayoutVisibleWindow win=%s *&com/android/server/wm/WindowState.java
S	D3µû√PWSetting move animation on %s *&com/android/server/wm/WindowState.java
t	55ú"* S”=WindowState %s does not have task or display area for dimming &*&com/android/server/wm/WindowState.java
é	6RÇØ›ØWPreparing to sync a window that was already in the sync, so try dropping buffer. win=%s *&com/android/server/wm/WindowState.java
£	¥81oò§aplGot a buffer for request id=%d but latest request is id=%d. Since the buffer is out-of-date, drop it. win=%s *&com/android/server/wm/WindowState.java
N	°6¸‰∂√rSURFACE isSecure=%b: %s *&com/android/server/wm/WindowState.java
s	}1œ®nI>Î4Animation done in %s: exiting=%b, reportedVisible=%b *.com/android/server/wm/WindowStateAnimator.java
V	 :gª]AF‘SURFACE HIDE ( %s ): %s *.com/android/server/wm/WindowStateAnimator.java
i	X9â&ï=≤/*Finishing drawing window %s: mDrawState=%s *.com/android/server/wm/WindowStateAnimator.java
{	27Ã⁄Ë¸À<finishDrawingLocked: mDrawState=COMMIT_DRAW_PENDING %s in %s *.com/android/server/wm/WindowStateAnimator.java
]	ˇ?ZÀ‰ﬁDraw state now committed in %s *.com/android/server/wm/WindowStateAnimator.java
u	j:˝Ø\∂çœ6commitFinishDrawingLocked: mDrawState=READY_TO_SHOW %s *.com/android/server/wm/WindowStateAnimator.java
h	Ì;4Ç´)createSurface %s: mDrawState=DRAW_PENDING *.com/android/server/wm/WindowStateAnimator.java
t	œ2™2«%ﬂ5  CREATE SURFACE %s: pid=%d format=%d flags=0x%x / %s *.com/android/server/wm/WindowStateAnimator.java
V	˛8®ûÇ∏©¡SURFACE DESTROY: %s. %s *.com/android/server/wm/WindowStateAnimator.java
a	j>¢÷?“cw"Orientation change skips hidden %s *.com/android/server/wm/WindowStateAnimator.java
v	z4ãò<Åπ7SURFACE controller=%s alpha=%f HScale=%f, VScale=%f: %s *.com/android/server/wm/WindowStateAnimator.java
j	 ?aÀQÃÿ+Orientation continue waiting for draw in %s *.com/android/server/wm/WindowStateAnimator.java
`	†=’ÿh;}g!Orientation change complete in %s *.com/android/server/wm/WindowStateAnimator.java
_	0ˆ Ÿ¿Á SURFACE SHOW (performLayout): %s *.com/android/server/wm/WindowStateAnimator.java
V	T6ÅÙ:¿¸SURFACE isOpaque=%b: %s *.com/android/server/wm/WindowStateAnimator.java
b	ß5\∆Ä
§õ#SURFACE isColorSpaceAgnostic=%b: %s *.com/android/server/wm/WindowStateAnimator.java
ò	C1‚eT±YapplyAnimation: win=%s anim=%d attr=0x%x a=%s transit=%d type=%d isEntrance=%b Callers %s *.com/android/server/wm/WindowStateAnimator.java
a	(:£%+øt˛"Destroying surface %s called by %s *.com/android/server/wm/WindowStateAnimator.java
b	˘4s4Òpq+removeAllWindowsIfPossible: removing win=%s *&com/android/server/wm/WindowToken.java
S	®9=^Mæ	&addWindow: win=%s Callers=%s 
*&com/android/server/wm/WindowToken.java
F		<œ¢∫f!Adding %s to %s *&com/android/server/wm/WindowToken.java
g	É1W¶-¸{ö0setClientVisible: %s clientVisible=%b Callers=%s *&com/android/server/wm/WindowToken.javaWM_ERRORWindowManager'WM_DEBUG_ORIENTATIONWindowManager'WM_DEBUG_FOCUS_LIGHTWindowManager WM_DEBUG_BOOTWindowManager"WM_DEBUG_RESIZEWindowManager&WM_DEBUG_ADD_REMOVEWindowManager)WM_DEBUG_CONFIGURATIONWindowManager"WM_DEBUG_SWITCHWindowManager&	WM_DEBUG_CONTAINERSWindowManager!
WM_DEBUG_FOCUSWindowManager%WM_DEBUG_IMMERSIVEWindowManager$WM_DEBUG_LOCKTASKWindowManager"WM_DEBUG_STATESWindowManager!WM_DEBUG_TASKSWindowManager+WM_DEBUG_STARTING_WINDOWWindowManager'WM_SHOW_TRANSACTIONSWindowManager(WM_SHOW_SURFACE_ALLOCWindowManager+WM_DEBUG_APP_TRANSITIONSWindowManager WM_DEBUG_ANIMWindowManager0WM_DEBUG_APP_TRANSITIONS_ANIMWindowManager.WM_DEBUG_RECENTS_ANIMATIONSWindowManager WM_DEBUG_DRAWWindowManager-WM_DEBUG_REMOTE_ANIMATIONSWindowManager%WM_DEBUG_SCREEN_ONWindowManager*WM_DEBUG_KEEP_SCREEN_ONWindowManager'WM_DEBUG_SLEEP_TOKENWindowManager+WM_DEBUG_WINDOW_MOVEMENTWindowManagerWM_DEBUG_IMEWindowManager,WM_DEBUG_WINDOW_ORGANIZERWindowManager'WM_DEBUG_SYNC_ENGINEWindowManager.WM_DEBUG_WINDOW_TRANSITIONSWindowManager2 WM_DEBUG_WINDOW_TRANSITIONS_MINWindowManager)!WM_DEBUG_WINDOW_INSETSWindowManager-"WM_DEBUG_CONTENT_RECORDINGWindowManager%#WM_DEBUG_WALLPAPERWindowManager*$WM_DEBUG_BACK_PREVIEWCoreBackPreview!%WM_DEBUG_DREAMWindowManager"&WM_DEBUG_DIMMERWindowManager'WM_DEBUG_TPLWindowManager,(WM_DEBUG_EMBEDDED_WINDOWSWindowManager))
TEST_GROUPWindowManagerProtoLogTest